[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Ghana Statistical Service\n\nThe Ghana Statistical Service has been consistent in performing its legal functions to serve the needs of individuals, organisations, development partners and the government without hindrance. However, the need to improve the legal framework to reflect changes in the statistics landscape worldwide has resulted in the promulgation of a new law- Statistical Service Act, 2019 (Act 1003) to replace the Statistical Service Law, 1985. The New Law establishes the Ghana Statistical Service as the central statistics producing and co-ordinating institution for the National Statistical System and to strengthen the production of quality, relevant, accurate and timely statistical information for the purpose of national development.\nThe New Law specifically mandates the Service to: (a) Provide leadership and direction for the efficient, consistent and comprehensive collection, processing, analysis, documentation and storage of statistical information within the National Statistical System; (b) Collect, compile, analyse, abstract, publish and disseminate statistical information related to the commercial, industrial, financial, social, demographic, economic and other activities and conditions of the people or this country through the conduct of surveys and national censuses, including population, housing, economic and agricultural censuses; (c) Determine the manner in which the Ministries, Departments, Agencies, District Assemblies and statutory bodies collaborate with the Service in the collection, compilation and publication of statistical information, including statistics derived from the activities of those entities; (d) Develop, create awareness and operationalize the code of ethics and practice for the production and use of data to ensure quality of statistics with respect to relevance, accuracy and reliability, coherence and comparability, sustainability, continuity, timeliness, topicality and integrity; (e) Manage a centrally organized database of (i) Commercial, industrial, financial, social, demographic and economic survey and censuses data sets at the micro and macro levels, (ii) Statistical indicators, and (iii) Metadata on the statistical processes within the National Statistical System; (f) Review, assess, classify and designate as official statistics, data produced by the Service, Ministries, Departments and Agencies, District Assemblies and other institutions within the country and report regularly on the state of official statistics to the Government and the people; (g) Promote and build statistical capacity and professional competencies using diverse interventions including the establishment and operation of a National Statistical Training Centre; (h) Prescribe and direct the pursuance of scientific independence, impartiality, responsibility and transparency in statistical production; and (i) Promote bilateral and multilateral statistics co-operation and partnership to upgrade statistics production systems in the country."
  },
  {
    "objectID": "brand_guide.html#cover-design",
    "href": "brand_guide.html#cover-design",
    "title": "Report Writing Guide",
    "section": "1.1 Cover Design",
    "text": "1.1 Cover Design\n\nThe front cover design of the report must have the logos, the name of the census/survey/routine or administrative data report, the volume number of the report if applicable, the name of the report, images which reflect the content of the report, and the month and year of publication.\nAll text on the cover page should be in UPPER CASE.\nThe back cover of the report should have the logo of the Statistical Service and the link to the GSS website.\n\n1.1.1 Use of Images\nThe use of images on the cover page must reflect the content and themes of the report.\nThe images should be semi-transparent and placed behind the title of the report underneath the logos and the name of the census/survey/routine or administrative data report.\n\n\n1.1.2 Use of logos\nThe cover design of the report should have Ghana’s Coat of Arms and the Statistical Service logo at the top of the page, with the Coat of Arms on the left, and the GSS logo on the right.\nWhen available, census/survey/routine or administrative data report logos must be placed between the Coat of Arms and the GSS logo as illustrated below.\n\nThe logos of the organisations involved, or programmes associated with the project should be placed at the bottom part of the cover page.\nWriters should ensure that the correct GSS logo (shown below) is used. Logos should not be resized or reshaped.\n\n\n\n1.1.3 Use of Colour\nThe recommended primary colours utilised in report designs should be inspired by the GSS logo.\n\n\n\n\n\n\n\nMinks~Hex: #210D69rgb: 210,210,210.\n\n\n\n\nHighlighter Lilac~Hex: #DB2E76rgb: 219,46,118.\n\n\n\n\nAllegiance~Hex: #586889rgb: 88,104,137.\n\n\n\n\nRich Green~Hex: #227C42rgb: 34,124,66."
  },
  {
    "objectID": "brand_guide.html#page-margins",
    "href": "brand_guide.html#page-margins",
    "title": "Report Writing Guide",
    "section": "1.2 Page Margins",
    "text": "1.2 Page Margins\nThe orientation of reports should be in portrait for pages with text and charts. Pages with wide tables can be presented in landscape orientation. The following page margins should be used:\n\n  Top: 2.00 cm and Bottom: 1.25 cm\n  Left: 2.30 cm and Right: 2.30 cm"
  },
  {
    "objectID": "brand_guide.html#header-and-footer",
    "href": "brand_guide.html#header-and-footer",
    "title": "Report Writing Guide",
    "section": "1.3 Header and Footer",
    "text": "1.3 Header and Footer\nPages should have a footer (The retrospect option for footers should be selected in Word).\nAll pages should be numbered. Page numbers should be placed on the bottom right corner of all pages. Page numbers should be in Century Gothic font size 11.\nA footer with the name GHANA STATISTICAL SERVICE (in upper case) placed on the bottom left corner of ALL pages. Report pages should not have headers."
  },
  {
    "objectID": "brand_guide.html#section-numbering",
    "href": "brand_guide.html#section-numbering",
    "title": "Report Writing Guide",
    "section": "1.4 Section numbering",
    "text": "1.4 Section numbering\nThe style for numbering chapters and sections within reports is shown below\n\n  Main chapter: 1\n  First level sub-section: 1.1\n  Second level sub-section: 1.1.1\n  Third level sub-section: 1.1.1.1"
  },
  {
    "objectID": "brand_guide.html#font",
    "href": "brand_guide.html#font",
    "title": "Report Writing Guide",
    "section": "1.5 Font",
    "text": "1.5 Font\n\n1.5.1 Size, Style, Colour and Capitalisation of Text\nThe font type Century Gothic (Body) should be used for text. Below are the font sizes, styles, colours, and indentation for the different levels of text:\nHeading one should be used for chapter or section headings numbered 1, 2, 3 etc. The subsequent heading styles should be used for the different sub-section levels.\nHEADING ONE (FONT SIZE 16; BOLD; UPPER CASE; BLACK)\nHeading Two (font size 14; bold; black; capitalise each word)\n\n  Heading Three (font size 13; bold; black; capitalise each word)\n\n  Heading Four (font size 12; bold; italics; black; capitalise each word)\nText within paragraph\n\n  (Font size 11; black; capitalise first word of sentence and proper nouns) \n\nFigure title\n\n  (font size 11; bold; small caps case; black, lighter 35%)\n\nTable title\n\n  (font size 11; bold; small caps case; black, lighter 35%)\n\nFOOTER\n\n  (FONT SIZE 9; UPPER CASE; WHITE, DARKER 50%) \n\n\n\n\n1.5.2 Tables\nThe font type Arial Narrow, font size 11 should be used for tables in the reports. In cases where tables have too many columns to fit the font size 11, a smaller size can be used.\n\n\n\n1.5.3 Charts\nCentury Gothic Bold, font size 11 should be used for the labels on graphs."
  },
  {
    "objectID": "brand_guide.html#paragraph-and-spacing",
    "href": "brand_guide.html#paragraph-and-spacing",
    "title": "Report Writing Guide",
    "section": "1.6 Paragraph and Spacing",
    "text": "1.6 Paragraph and Spacing\n\nText within paragraphs should be justified paragraphs. The following should be the line spacing used for text:\n\n  Paragraph spacing: Before: 12pt and After: 8pt\n  Line spacing: 1.15"
  },
  {
    "objectID": "brand_guide.html#bullets-and-numbering",
    "href": "brand_guide.html#bullets-and-numbering",
    "title": "Report Writing Guide",
    "section": "1.7 Bullets and Numbering",
    "text": "1.7 Bullets and Numbering\n\n\n  Round bullets (shown) should be used.\n\nFor lists with five or more items, numbers should be used instead of bullets.]\nWhen listing items ensure that there is consistency in the listed (verbs items as illustrated below:\n\n\n\n\n\n\n\n\n\nConsistent\nInconsistent\n\n\n\n\n\nTraining of field officers\n\n\nTrained field officers;\n\n\n\n\nValidation of data; and\n\n\nData validation; and\n\n\n\n\nWriting of reports.\n\n\nWriting of reports\n\n\n\n\nBullet items should be limited to single words, phrases or one sentence.\nWhen listing items that are complete sentences, each item should start with a capital letter and end with a full stop.\nWhen listing items that are single words or short phrases, items should start with small letters (except when the first word is a proper noun. The subsequent items should start with a small letter. Each item apart from the last should end with a semicolon. The penultimate item should have “and” or “or” after the semicolon. The last item should end with a full stop. An example is shown below:\n\n  Worked at least one hour in their paid job or business activity;\n  Engaged in a family business for payment in cash or in kind; or\n  Had a paid job or business activity but were on temporary absence."
  },
  {
    "objectID": "brand_guide.html#grammar-and-style",
    "href": "brand_guide.html#grammar-and-style",
    "title": "Report Writing Guide",
    "section": "2.1 Grammar and Style",
    "text": "2.1 Grammar and Style\n\nAll reports should be written in a formal professional style and free of grammatical and typographical errors. Writers are encouraged to utilise the word processing software or online editing tools to review their drafts before submission.\n\n\n2.1.1 Language\nGSS produces publications for diverse users including policy makers, civil society organisations, development partners and the private sector. As such reports should be written in clear non-technical language. Writers should use more common words and restrict usage of jargon to increase the readability of reports. When technical terms are used, they should be properly explained.\nReports should exclude:\n\n  contractions (e.g., can’t, don’t)\n  shorthand (e.g., &, cont’d,)\n  shortened word forms (e.g., org., dept.)\n  colloquial expressions (e.g., kids, folks, a bunch of, lots of)\n  idioms (e.g., deal with, on the flip side, boils down to)\n\nWriters should also avoid the use of local slang such as dumsor (persistent power outages). Local slang can be used when there is no formal alternative, but should be italicised example, trotro, or chop bar. Where there is a formal but less recognised alternative, the slang can be inserted in parentheses e.g., female porters (kayayei).\nReports should be written in the third person and avoid the use of personal pronouns such as, I and we.\n\n\n1.1.2 Clarity\nAs much as possible, reports should use the active voice (e.g., the Statistical Service conducted a three-day training for five enumerators) and avoid the passive voice (e.g., five enumerators were trained for three days).\nWriters should use specific figures and avoid subjective quantifiers such as many, a few, and most.\nWriters should similarly avoid using adverbs such as very, really, and quite as descriptive words and rather use one fitting word e.g., rapidly (very quickly), sizeable (really large), moderately (quite slowly).\n\n\n2.1.3 Verbosity\nWhile there are no strict limits to sentence lengths, writers are advised to have an average of 12 to 15 words per sentence in their reports.\nSimilarly, writers are advised to average three to five sentences per paragraph.\nWriters should aim for short succinct sentences. For instance, “The purpose of the pre-test was to assess the questionnaire” (10 words) can be “The pre-test assessed the questionnaire” (five words).\nPhrases should be replaced with single words whenever possible. Some suggestions are provided below: .\n\n\n\n\nOne word\nPhrase\n\n\n\n\nBecause\nAs a consequence of, due to the fact that\n\n\nFor\nFor the purpose of\n\n\nDespite, although\nIn spite of the fact that\n\n\nWithout\nIn the absence of\n\n\nWhile, during\nIn the course of\n\n\nExamine, explore, assess\nLook closely at, to find out whether\n\n\nDaily\nOn a daily basis\n\n\nComprises\nConsists of\n\n\nConsidering\nIn view of\n\n\nExcludes\nDoes not include\n\n\nEquivalent, similar\nThe same as\n\n\n\n\n\n2.1.4 Tenses\nVerb tenses should be consistent throughout. The recommended tenses are presented below:\n\n\n\n\n\n\n\n\nSection\nTense\nExample\n\n\n\n\nOverview including field operations, and other activities completed prior to report writing\nPast\nGSS developed two categories of instruments for the 2021 PHC: the listing form and the enumeration instruments.\n\n\nLiterature review\nPresent perfect\nBeing behind grade for age has been shown to negatively influence students’ academic and socio-emotional outcomes.\n\n\n\nPast\nAnarfi, Awusabo-Asare, and Nsowah-Nuamah (2000) estimated that there were 500,000 to 800,000 Ghanaians in Côte d’Ivoire in 1986.\n\n\nData and methodology\nPresent\nThe statistics presented in this thematic brief are generated from the 2021 PHC and on trends are complemented with data from the 2000 and 2010 censuses.\n\n\nFindings and highlights\nPresent\nThree in ten (30.2%) persons 6 years and older are not literate in any language.\n\n\n\nPast tense can be used for historical comparisons\nUrban and rural populations increased in all regions between 2010 and 2021 except Eastern and Ahafo regions where rural population decreased.\n\n\nConclusions\nPresent\nThe findings indicate that a substantial share of children is being deprived of their rights as outlined in the 1992 Constitution and the 1998 Children’s Act.\n\n\nRecommendations\nPresent\nGiven the observed protective influence of schooling on girls, it is particularly important for a coordinated effort to ensure that girls start and stay in school.\n\n\n\n\n\n2.1.5 Punctuation\nWhen a list within a sentence contains three or more items, a comma must be used after all items except the last one as shown below :\nThis report presents data on literacy, current school attendance, and educational attainment.\nWhen items in the list contain commas, semicolons should be used to separate items as shown below:\nThis publication targets Ministries, Departments, and Agencies (MDAs); Metropolitan, Municipal and District Assemblies (MMDAs); development partners; civil society organisations (CSOs); private sector; research and academia; and the public.\nOne space should separate sentences within a paragraph.\n\n\n\n2.1.6 Subject verb agreement\nInstitutions are singular e.g., GSS produces quality data.\nData should be considered a collective noun e.g., the data shows fertility has declined overtime.\nStatistics should be referred to in the plural e.g., statistics indicate that fertility has declined overtime.\n\n\n\n2.1.7 Capitalisation of Words\nCapital letters should be used for the first words in sentences and for proper nouns. Proper nouns refer to specific persons, or places. Common nouns, which are general, should not be capitalised. An example is shown below:\n“We are also indebted to the universities for their technical support, particularly the University of Ghana and the University of Cape Coast.”\nThe names of regions should be capitalised as such Greater Accra Region. When referring to two or more regions however, regions must not be capitalised. An example is shown below:\n“The Northern Region (14,031) has the highest number of girls aged 12 to 17 years who have ever been in union, followed distantly by the Ashanti (9,767) and Greater Accra regions (6,063).”\nCOVID-19 should be capitalised while coronavirus is written in small letters."
  },
  {
    "objectID": "brand_guide.html#writing-about-numbers",
    "href": "brand_guide.html#writing-about-numbers",
    "title": "Report Writing Guide",
    "section": "2.2 Writing about Numbers",
    "text": "2.2 Writing about Numbers\nThe following guidelines refer to numbers in text, charts, and tables.\nAll figures from one to nine should be written in words and those 10 and above should be written in figures. Exceptions include age e.g., persons aged 5 years and currency e.g., GH₵8.\nOrdinal numbers from first to ninth must also be spelled out. 10th and above can be written in figures.\nNumbers above 999 must be written with commas e.g., 511,622.\nWhen a percentage figure is mentioned in a text, the words ‘per cent’ should follow the figure. However, if the figure is quoted in brackets, the percentage symbol (%) should be used. An example is:\n“Among children engaged in economic activity, almost 80 per cent are involved in agriculture-related activities with the highest proportion in Savannah (89.8%) and the least in Greater Accra (26.2%).”\nSentences beginning with numbers should have the figures written out in words regardless of whether the number is below or above ten. An example is:\n“Thirteen per cent of those who have attended school in the past have tertiary education as the highest level attained.”\nFractions (e.g., one-fifth) should be written in words.\nUse “to” in text and not hyphens when referring to ranges e.g., 15 to 19 years.\nNumbers above 1,000 should be fully written out and abbreviations (such as 1k) should not be used.\nNumbers above 1,000,000 can be written in figures and words e.g., 2 million."
  },
  {
    "objectID": "brand_guide.html#spelling",
    "href": "brand_guide.html#spelling",
    "title": "Report Writing Guide",
    "section": "2.3 Spelling",
    "text": "2.3 Spelling\nSpellings should follow the British convention. Examples are provided below:\nWords ending in the following:\n\n-se: e.g., organise and analyse\n-our: e.g., colour and labour\n-re: e.g., centre and kilometre\n-il: e.g., fulfil and enrol\n\nWords containing the following:\n\n-mme- e.g., programme\n-oe- e.g., foetus, diarrhoea\n\nFor consistency, writers should follow the conventions below for the following compound words:\n\nBaseline and endline\nCoordinator; coordinate\nCooperation, cooperate\nDataset Database\nDecision-maker; decision-making\nEmail\nLong-term\nMetadata\nMultidisciplinary\nOnline\nPolicy maker\nSelf-employment\nUnderperforming"
  },
  {
    "objectID": "brand_guide.html#use-of-abbreviations",
    "href": "brand_guide.html#use-of-abbreviations",
    "title": "Report Writing Guide",
    "section": "2.4 Use of Abbreviations",
    "text": "2.4 Use of Abbreviations\nAll abbreviations in reports must be fully spelled out when first mentioned.\nAbbreviations should be written without full stops e.g., CAPI.\nAbbreviated measurements (such as km, kg) are acceptable. When using abbreviated measures, there should be no space between number and measure e.g., 50km.\nWhen using the abbreviated form of GSS, a definite article should not be used as illustrated below:\n“The Ghana Statistical Service (GSS) produces census and survey reports per its mandates or GSS produces census and survey reports per its mandates.”"
  },
  {
    "objectID": "brand_guide.html#use-of-parentheses",
    "href": "brand_guide.html#use-of-parentheses",
    "title": "Report Writing Guide",
    "section": "2.5 Use of Parentheses",
    "text": "2.5 Use of Parentheses\nAs a rule, use round brackets.\nHowever, parentheses within parentheses must be avoided. Square brackets should be used with round brackets to create a double enclosure in the text e.g., the Sustainable Development Goals ([SDGs]).\nParentheses next to parentheses must also be avoided. Square brackets should be used next to parentheses (round brackets) e.g., a third of the population (32.7%) [Figure 1]."
  },
  {
    "objectID": "brand_guide.html#references",
    "href": "brand_guide.html#references",
    "title": "Report Writing Guide",
    "section": "2.6 References",
    "text": "2.6 References\nPublications should utilise the American Psychological Association (APA) style of referencing."
  },
  {
    "objectID": "brand_guide.html#outline",
    "href": "brand_guide.html#outline",
    "title": "Report Writing Guide",
    "section": "3.1 Outline",
    "text": "3.1 Outline\nThe outline of the report should be as follows:\nIntroductory pages should be numbered i, ii, iii. and so on. Section names in this part of the report must not be numbered.\n\nFirst page\nAdministrative Map of Ghana\nList of Publications (if applicable)\nForeword\nAcknowledgements\nExecutive summary (if applicable)\nTables of Contents\nList of Figures\nList of Tables\nAbbreviations and Acronyms\n\nMain report pages should be numbered 1, 2, 3 and so on). Section names in this part of the report must be numbered e.g., 1. Background, 2. Concepts and Definitions etc.\n\nBackground\nConcepts and Definitions\nMethodology\nHighlights of Results (if applicable)\nMain Results\nSummary of Findings, Conclusions, and Recommendations\nList of Contributors\n\nEach section of the report must begin on a new page."
  },
  {
    "objectID": "brand_guide.html#length-of-reports",
    "href": "brand_guide.html#length-of-reports",
    "title": "Report Writing Guide",
    "section": "3.2 Length of Reports",
    "text": "3.2 Length of Reports\n\nThe recommended length of reports is 60 pages excluding references and appendices."
  },
  {
    "objectID": "brand_guide.html#outline-1",
    "href": "brand_guide.html#outline-1",
    "title": "Report Writing Guide",
    "section": "4.1 Outline",
    "text": "4.1 Outline\n\nThe recommended outline for thematic briefs is provided below: for thematic areas that do not fit into this outline, authors can adapt it as needed.\n\nTable of contents\nList of figures and tables\nIntroduction – including objectives, rationale, and policy relevance\nDefinition of concepts\nLiterature review\nJustification for the selection of correlates  \nData sources\nMethodology\nResults\nConclusions\nList of contributors\nAppendices\n\nEach section of the thematic brief must begin on a new page.\n\n\n4.1.1 Table of Contents\nThe table of contents must be written using a numerical and not alphabetical format. The first heading (you may call them chapter headings) must be written in all caps and the headings under them (second headings) in initial caps.\n\n\n4.1.2 List of Figures\nThe list should have the figure numbers, figure names and page numbers.\n\n\n4.1.3 List of Tables\nThe list should have the table numbers, table names and page numbers.\n\n\n4.1.4 Introduction\nThis section should provide information on the importance of the thematic area for development, the rationale and policy relevance of the thematic brief referencing the relevant policy documents and national commitments (specific policies, programmes, goals, frameworks) to the thematic area. If applicable, the introduction should note any methodological issues affecting comparability of the statistics in the thematic brief.\n\n\n4.1.5 Definition of Concepts, Data Sources, and Estimation\n\n4.1.5.1 Definition of concepts\nAll concepts and indicators used in the subsequent sections must be defined here.\n\n\n4.1.5.2 Data sources\nInformation on all the data sources used for the analysis must also be provided here.\n\n\n4.1.5.3 Estimation\nFor thematic briefs that include a regression analysis, information on the model must be provided here.\n\n\n\n4.1.6 Justification for the Selection of Correlates\nThis section should provide justification for the key correlates of the indicators being studied. Correlates should be selected based on their policy relevance and their potential to be used for targeted interventions. The selection of correlates should be based on a review of academic literature and policy documents.\n\n\n4.1.7 Key Findings\nThis section should present the highlights of key and striking findings from the results. The section should be subdivided into:\n\n4.1.7.1 Trends\nThe section should present trends with data from past censuses, and surveys if needed.\nTrends should only be presented for indicators where the methodology is consistent. As a rule, for comparison of trends, censuses should be compared to censuses and surveys to survey. When using both censuses and surveys, it is preferable to have separate charts side by side comparing the census and survey trend\n\n\n4.1.7.2 Patterns\nThis section should present patterns by age, sex, type of locality, region, and district.\n\n\n4.1.7.2 Correlates\nThis section should present the cross-tabulations of the outcome variable and the correlates, and the regression results.\n\n\n\n4.1.8 Conclusions\nPolicy conclusions guided by the introduction and based on the analyses should be provided. This should be written in non-technical language and should discuss the implications of the findings referencing the policy frameworks in the introduction.\n\n\n4.1.9 Appendices\nAll tables should be placed in the appendix. Only tables that are not available in already published reports should be placed here. The links to relevant tables in other reports and the census statistics dashboard should be provided.\n\n\n4.1.10 List of Contributors\nEach report should have list of all persons that contributed to its production. The title, first name and surname of each person along with their email address, institution and role in the report writing process must be provided as shown below:\n\n\n\nName\nEmail\nInstitution\nRole\n\n\n\n\nProf. Samuel K. Annim\nsamuel.annim@statsghana.gov.gh\nGhana Statistical Service\nLead Author\n\n\nMs. Anointing Yaa Lartey\nannkesh1234@gmail.com\nGhana Statistical Service\nData Analyst\n\n\nDr. Grace Bediako\ngrace.bediako822@gmail.com\nGhana Statistical Service\nReviewer"
  },
  {
    "objectID": "brand_guide.html#length-of-thematic-briefs",
    "href": "brand_guide.html#length-of-thematic-briefs",
    "title": "Report Writing Guide",
    "section": "4.2 Length of Thematic Briefs",
    "text": "4.2 Length of Thematic Briefs\n\nThe complete Thematic Briefs should not exceed 40 pages."
  },
  {
    "objectID": "brand_guide.html#tables-1",
    "href": "brand_guide.html#tables-1",
    "title": "Report Writing Guide",
    "section": "5.1 Tables",
    "text": "5.1 Tables\n\nAll figures in tables should be single-spaced and right indented, and headings centred.\nAbsolute numbers in tables must have a comma separator for numbers that are more than three digits (i.e., 1,123).\nUse of decimal points for percentages must be consistent throughout the document. One decimal place is recommended for all tables.\nFor tables that span more than one page, each page should have the table header repeated but not the table name.\nThe table heading should include the section/chapter number and the table number under that chapter and separated by (.).\nThe table name must provide information on the sample, the indicator being presented in the table and the levels of disaggregation in that order. An example is:\nTable 5.1: Population 15 years and older by economic activity status, sex, type of locality and region\nTable names and headers must indicate the units of measurement e.g., percent, GH₵.\nTables should have a top and bottom border but not right and left borders. Within the table only the table headers should have top and bottom borders as shown below:\n\nNotes can be added under tables as needed, to provide supplementary detail."
  },
  {
    "objectID": "brand_guide.html#charts-1",
    "href": "brand_guide.html#charts-1",
    "title": "Report Writing Guide",
    "section": "5.2 Charts",
    "text": "5.2 Charts\nNumerical numbering should be used for all charts which should reflect the section/chapter number and the figure number.\nUse of decimal points must be consistent throughout the document. One decimal place is recommended for all charts. Exceptions to this rule are currency (GH₵14.50) and age (24 years)\nThe name of the chart must provide information on the sample, the indicator being presented in the table and the levels of disaggregation in that order. An example is:\nFigure 5.1: Proportion of economically active persons 15 years and older by type of locality and sex"
  },
  {
    "objectID": "brand_guide.html#highlights",
    "href": "brand_guide.html#highlights",
    "title": "Report Writing Guide",
    "section": "5.3 Highlights",
    "text": "5.3 Highlights\nFor each highlight, there should be one graph to illustrate the finding and one to three sentences explaining the key finding.\nCentury Gothic size 14 in white colour should be used for highlights with a blue (#2E37FF) background as shown below:\nFigure 2: Example of a highlight"
  },
  {
    "objectID": "brand_guide.html#graphs",
    "href": "brand_guide.html#graphs",
    "title": "Report Writing Guide",
    "section": "6.1 Graphs",
    "text": "6.1 Graphs\nCentury Gothic Bold, font size 12 should be used for the labels and values on the graph. All axes should be labelled and where possible, the values for data points should be indicated on the graph."
  },
  {
    "objectID": "brand_guide.html#colours",
    "href": "brand_guide.html#colours",
    "title": "Report Writing Guide",
    "section": "6.2 Colours",
    "text": "6.2 Colours\nThe following colour schemes must be used for all graphs.\n\n6.1.1 Charts\n\nSex\n\n                    \n                    Male\n                        \n                            Hex: #206095 rgb(32, 96, 149).\n                        \n                    \n                    \n                        Female\n                        \n                            Hex: #F66068 rgb(246, 96,104).\n                        \n                    \n                \n\n\n\n\nLocality Type\n\n                    \n                         National  \n                        \n                         #27A0CC .\n                        \n                    \n                    \n                        Urban\n                        \n                            #871A5B .\n                        \n                    \n                            \n                                Rural\n                        \n                            \n                            #22D0B6 .\n                        \n                    \n                \n                \n             \n\n\n\nEconomic Sectors\n\n                    \n                         Industry  \n                        \n                         #14607A .\n                        \n                    \n                    \n                        Agriculture\n                        \n                            #07BB9E .\n                        \n                    \n                            \n                                Service\n                        \n                            \n                            #F98B00 .\n                        \n                    \n                \n    \n    \n    \n\n\n\nNeutral\n\n\n                    \n                        \n                            #002060\n                        \n                    \n                    \n                        \n                            #0070C0\n                        \n                    \n                    \n                        \n                            #00B0F0\n                        \n                    \n                    \n                        \n                            #8EA9DB\n                        \n                    \n                    \n                        \n                            #9BC2E6\n                        \n                    \n                    \n                        \n                            #FFFFCC\n                        \n                    \n                    \n    \n    \n    \n    \n\n\n\nPositive ~ Negative\n\n\n                    \n                        \n                            #6AA84F\n                        \n                    \n                    \n                        \n                            #93C47D\n                        \n                    \n                    \n                        \n                            #FFFFCC\n                        \n                    \n                    \n                        \n                            #F4CCCC\n                        \n                    \n                    \n                        \n                            #E06666\n                        \n                    \n                    \n                    \n    \n    \n    \n    \n\n\n\nPopulation & Density\n\n\n                    \n                        \n                            #FFFFCC\n                        \n                    \n                    \n                        \n                            #C7E9B4\n                        \n                    \n                    \n                        \n                            #7FCDBB\n                        \n                    \n                    \n                        \n                            #41B6C4\n                        \n                    \n                    \n                        \n                            #2C7FB8\n                        \n                    \n                    \n    \n    \n    \n    \n\n\n\nIncidence\n\n\n                    \n                        \n                            #FECCCC\n                        \n                    \n                    \n     \n                        \n                            #FF9999\n                        \n                    \n                    \n     \n                        \n                            #FF6666\n                        \n                    \n                   \n     \n                        \n                            #FF3333\n                        \n                    \n                   \n     \n                        \n                            #CC0000\n                        \n                    \n     \n     \n                        \n                            #990000\n                        \n                    \n                    \n    \n\n\n\nFood / Non-food\n\n                    \n                    Food\n                        \n                            #3ECDB9 \n                        \n                    \n                    \n                        Non-food\n                        \n                            #04BCFC"
  },
  {
    "objectID": "graphics-guide.html",
    "href": "graphics-guide.html",
    "title": "Data Visualization Guidelines",
    "section": "",
    "text": "R is an amazing tool for data analysis and visualization. The code on this page shows the a variety of plots using the R ggplot2 package to display statistical outputs. All the data shown on the page is fictitious and only meant for illustrative purposes."
  },
  {
    "objectID": "graphics-guide.html#use-of-fonts",
    "href": "graphics-guide.html#use-of-fonts",
    "title": "Data Visualization Guidelines",
    "section": "Use of Fonts",
    "text": "Use of Fonts\n\nCentury Gothic Bold, font size 12 should be used for the labels and values on the graph. - Download here"
  },
  {
    "objectID": "graphics-guide.html#general-rules",
    "href": "graphics-guide.html#general-rules",
    "title": "Data Visualization Guidelines",
    "section": "General Rules",
    "text": "General Rules\n\nAll axes should be labelled and where possible, the values for data points should be indicated on the graph.\nPrevent use of grid lines whenever possible to not clutter plots\nUse line breaks in long labels\nBe conscious about the way axis are ordered. For example, order regions either from the lowest to the highest value or using the serpentine order.\nlabel axis appropriately"
  },
  {
    "objectID": "graphics-guide.html#use-of-colours",
    "href": "graphics-guide.html#use-of-colours",
    "title": "Data Visualization Guidelines",
    "section": "Use of Colours",
    "text": "Use of Colours\nPlease use the following colour schemes for different types of disaggregation.\n\nSex\n\n                    \n                    Male\n                        \n                            Hex: #206095 rgb(32, 96, 149).\n                        \n                    \n                    \n                        Female\n                        \n                            Hex: #F66068 rgb(246, 96,104).\n                        \n                    \n                \n    \n    \n    \n\n\nLocality Type\n\n                    \n                         National  \n                        \n                         #27A0CC .\n                        \n                    \n                    \n                        Urban\n                        \n                            #871A5B .\n                        \n                    \n                            \n                                Rural\n                        \n                            \n                            #22D0B6 .\n                        \n                    \n                \n    \n    \n    \n\n\n\nEconomic Sectors\n\n                    \n                         Industry  \n                        \n                         #14607A .\n                        \n                    \n                    \n                        Agriculture\n                        \n                            #07BB9E .\n                        \n                    \n                            \n                                Service\n                        \n                            \n                            #F98B00 .\n                        \n                    \n                \n    \n    \n    \n\n\n\nNeutral\nNeutral is used on general variables. It is advise that the maximum number of variables per plot should not be more than 5.\n\n\n                    \n                        \n                            #002060\n                        \n                    \n                    \n                        \n                            #0070C0\n                        \n                    \n                    \n                        \n                            #00B0F0\n                        \n                    \n                    \n                        \n                            #8EA9DB\n                        \n                    \n                    \n                        \n                            #9BC2E6\n                        \n                    \n                    \n                        \n                            #FFFFCC\n                        \n                    \n                    \n    \n    \n    \n    \n\n\n\nPositive ~ Negative\n\n\n                    \n                        \n                            #6AA84F\n                        \n                    \n                    \n                        \n                            #93C47D\n                        \n                    \n                    \n                        \n                            #FFFFCC\n                        \n                    \n                    \n                        \n                            #F4CCCC\n                        \n                    \n                    \n                        \n                            #E06666\n                        \n                    \n                    \n    \n    \n    \n    \n\n\n\nPopulation & Density\n\n\n                    \n                        \n                            #FFFFCC\n                        \n                    \n                    \n                        \n                            #C7E9B4\n                        \n                    \n                    \n                        \n                            #7FCDBB\n                        \n                    \n                    \n                        \n                            #41B6C4\n                        \n                    \n                    \n                        \n                            #2C7FB8\n                        \n                    \n                    \n    \n    \n    \n    \n\n\n\nIncidence\n\n\n                    \n                        \n                            #FECCCC\n                        \n                    \n                    \n     \n                        \n                            #FF9999\n                        \n                    \n                    \n     \n                        \n                            #FF6666\n                        \n                    \n                   \n     \n                        \n                            #FF3333\n                        \n                    \n                   \n     \n                        \n                            #CC0000\n                        \n                    \n     \n     \n                        \n                            #990000\n                        \n                    \n                    \n    \n    \n    \n    \n\n\n\nFood / Non-food\n\n                    \n                    Food\n                        \n                            #3ECDB9 \n                        \n                    \n                    \n                        Non-food\n                        \n                            #04BCFC\n                        \n                    \n                \n    \n    \n\n\n\n16 Regions and generic colours\nThese colour can be used for the 16 different regions or to assign more generic colours to a visualization that uses categories that are not defined in this visualization guide.\n\n\n                    \n                     Ahafo  \n\n                        \n                            #4B644B\n                        \n                    \n                    \n     \n                          Ashanti  \n\n                        \n                            #7D96AF\n                        \n                    \n                    \n     \n                               Bono  \n\n                        \n                            #EBA07E\n                        \n                    \n\n\n                   \n     \n                                    Bono East  \n\n                        \n                            #09979B\n                        \n                    \n                                            \n\n                   \n     \n                                         Central  \n\n                        \n                            #EA879C\n                        \n                    \n     \n     \n                                              Eastern  \n\n                        \n                            #E5B9AD\n                        \n                    \n                   \n                    \n                    \n                         \n                                              Greater Accra  \n\n                        \n                            #CC9B7A\n                        \n                    \n                    \n                         \n                                              Northern  \n\n                        \n                            #FDD835\n                        \n                    \n                    \n                                                                \n\n\n\n\n     \n                                              North East  \n\n                        \n                            #0070C0\n                        \n                    \n                    \n                    \n                         \n                                              Oti  \n\n                        \n                            #AE2B47\n                        \n                    \n                    \n                    \n                         \n                                              Savannah  \n\n                        \n                            #F94240\n                        \n                    \n                    \n                    \n                    \n                         \n                                              Upper East  \n\n                        \n                            #903000\n                        \n                    \n                    \n                                                                \n\n\n\n\n    Upper West  \n        \n        \n            #0F3B6C\n                \n                \n                    \n                    \n                    \n                        Volta  \n                            \n                            \n                                #59A77F\n                                    \n                                    \n                                        \n                                        \n                                        \n                                            Western  \n                                                \n                                                \n                                                    #FDAE6B\n                                                        \n                                                        \n                                                            \n                                                            \n                                                            \n                                                            \n                                                                Western North  \n                                                                    \n                                                                    \n                                                                        #B173A0\n                                                                            \n                                                                            \n                                                                                \n                                                                                \n\n    \n    \n\n\n\nMissing value\nIf you want to assign a colour to missing values, you can use this grey tone.\n\n                    \n                    Missing\n                        \n                            #ADABAC"
  },
  {
    "objectID": "graphics-guide.html#bar-charts",
    "href": "graphics-guide.html#bar-charts",
    "title": "Data Visualization Guidelines",
    "section": "Bar charts",
    "text": "Bar charts\nA bar chart is an effective way to visually represent data that is categorical or discrete in nature for example different regions in Ghana). It is particularly useful when comparing values across different categories or groups. Bar charts are ideal for showing the distribution or frequency of data, as well as identifying trends or patterns over time. They can be used to display numerical data such as quantities, percentages, and proportions. Overall, a bar chart is appropriate when you want to easily compare different categories or groups and understand the relative differences between them.\n\nexample data\n\n\nShow the code\nn_chopbars_df  <- tribble(~region_number, ~region, ~number_of_chop_bars, ~urban, ~rural,\n                            1,\"Western\", 567, 300, 267,\n                            2, \"Central\", 907, 600, 307,\n                            3, \"Greater Accra\", 6990, 4792, 2198, \n                            4, \"Volta\", 278, 78, 200, \n                            5, \"Eastern\", 787, 287, 500,\n                            6, \"Ashanti\",5621, 621, 5000,\n                            7, \"Western North\", 345, 145, 200,\n                            8,  \"Ahafo\", 678, 339, 339,\n                            9, \"Bono\",1268, 600, 668, \n                            10,\"Bono East\", 1268,1048, 220,\n                            11,\"Oti\",773, 500, 273, \n                            12,\"Northern\", 112, 12, 100,\n                            13,\"Savannah\", 1289,503, 786, \n                            14,\"North East\",378, 142, 236,\n                            15,\"Upper East\",1279,326, 953, \n                            16, \"Upper West\", 3782, 3456, 326) \n\nn_chopbars_df %>%\n    kable() %>%\n    kable_styling() %>% \n  scroll_box(height = \"400px\")\n\n\n\n\n \n  \n    region_number \n    region \n    number_of_chop_bars \n    urban \n    rural \n  \n \n\n  \n    1 \n    Western \n    567 \n    300 \n    267 \n  \n  \n    2 \n    Central \n    907 \n    600 \n    307 \n  \n  \n    3 \n    Greater Accra \n    6990 \n    4792 \n    2198 \n  \n  \n    4 \n    Volta \n    278 \n    78 \n    200 \n  \n  \n    5 \n    Eastern \n    787 \n    287 \n    500 \n  \n  \n    6 \n    Ashanti \n    5621 \n    621 \n    5000 \n  \n  \n    7 \n    Western North \n    345 \n    145 \n    200 \n  \n  \n    8 \n    Ahafo \n    678 \n    339 \n    339 \n  \n  \n    9 \n    Bono \n    1268 \n    600 \n    668 \n  \n  \n    10 \n    Bono East \n    1268 \n    1048 \n    220 \n  \n  \n    11 \n    Oti \n    773 \n    500 \n    273 \n  \n  \n    12 \n    Northern \n    112 \n    12 \n    100 \n  \n  \n    13 \n    Savannah \n    1289 \n    503 \n    786 \n  \n  \n    14 \n    North East \n    378 \n    142 \n    236 \n  \n  \n    15 \n    Upper East \n    1279 \n    326 \n    953 \n  \n  \n    16 \n    Upper West \n    3782 \n    3456 \n    326 \n  \n\n\n\n\n\n\n\nOne Color\n\n\nShow the code\n# Pipe operator to pass data frame to the next line\nn_chopbars_df %>% \n  # Create a ggplot object and set the aesthetic mappings\n  ggplot(mapping = aes(x = region, y = number_of_chop_bars)) +\n  # Add a column chart with bars of equal width\n  geom_col(width = 0.8) +\n  # Apply a custom theme to the plot\n  gssthemes() +\n# The expand argument controls whether the range of the y-axis is expanded to include a small margin around the data. The limits argument sets the upper and lower limits of the y-axis to nicelimits, which is a function that makes sure the limits are always above the largest data point. he breaks argument sets the tick marks on the y-axis to use extended_breaks from the scales package, which generates a sequence of evenly spaced values with loose spacing.\n  scale_y_continuous( expand = c( 0, 1 ),\n                      limits = nicelimits,\n                                        labels = scales::comma,\n                      breaks = scales::extended_breaks(only.loose = TRUE)) +\n    # Set the scale for the x-axis with tick labels rotated by 90 degrees\n  scale_x_discrete(guide = guide_axis(angle = 90)) +\n     # Add axis labels to the plot\n    labs(x = NULL,\n             y = \"number of chop bars\")+\n    # Set the coordinate system for the plot, allowing data points to be partially displayed outside of the plot area.\n  coord_cartesian(clip = \"off\")\n\n\n\n\n\n\n\nOne Color (Rotated) with labels\nThis example introduces coord_flip() instead of coord_cartesian() and bring back some theme elements to draw vertical instead of horizontal grid lines.\n\n\nShow the code\n# Pipe operator to pass data frame to the next line\nn_chopbars_df %>% \n  # Create a ggplot object and set the aesthetic mappings\n  ggplot(mapping = aes(x = region, y = number_of_chop_bars)) +\n  # Add a column chart with bars of equal width\n  geom_col(width = 0.8) +\n    # add text to the end of the plot\n     geom_text(mapping = aes(label = number_of_chop_bars), hjust = -0.2) +\n  # Apply a custom theme to the plot\n  gssthemes() +\n    # The expand argument controls whether the range of the y-axis is expanded to include a small margin around the data. \n    # The limits argument sets the upper and lower limits of the y-axis to nicelimits, which is a function that makes sure \n    # the limits are always above the largest data point. he breaks argument sets the tick marks on the y-axis to use\n    # extended_breaks from the scales package, which generates a sequence of evenly spaced values with loose spacing.\n  scale_y_continuous( expand = c( 0, 1 ),\n                      limits = nicelimits,\n                                        labels = scales::comma,\n                      breaks = scales::extended_breaks(only.loose = TRUE)) +\n    # Add axis labels to the plot\n    labs(x = NULL,\n             y = \"number of chop bars\")+\n    # Set the coordinate system for the plot, allowing data points to be partially displayed outside of the plot area.\n  coord_flip(clip = \"off\") +\n    # change the theme a bit so that 1) the axis lines are vertical and 2) the labels are right alligend\n    theme(panel.grid.major.x=element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y=element_blank(),\n                axis.text.x = element_text(vjust = 0.5))\n\n\n\n\n\n\n\nOne Color (Rotated) with labels and ordered\nYou can use the reorder() function to order the axis labels.\n\n\nShow the code\n# Pipe operator to pass data frame to the next line\nn_chopbars_df %>% \n  # Create a ggplot object and set the aesthetic mappings\n    # use the reorder function to reorder the the bars\n  ggplot(mapping = aes(x = reorder(region,number_of_chop_bars), y = number_of_chop_bars)) +\n  # Add a column chart with bars of equal width\n  geom_col(width = 0.8) +\n    # add text to the end of the plot, and comma at all thousands\n     geom_text(mapping = aes(label = scales::comma(number_of_chop_bars)), hjust = -0.2,) +\n  # Apply a custom theme to the plot\n  gssthemes() +\n    # The expand argument controls whether the range of the y-axis is expanded to include a small margin around the data. \n    # The limits argument sets the upper and lower limits of the y-axis to nicelimits, which is a function that makes sure \n    # the limits are always above the largest data point. he breaks argument sets the tick marks on the y-axis to use\n    # extended_breaks from the scales package, which generates a sequence of evenly spaced values with loose spacing.\n  scale_y_continuous( expand = c( 0, 1 ),\n                      limits = nicelimits,\n                                        labels = scales::comma,\n                      breaks = scales::extended_breaks(only.loose = TRUE)) +\n    # Add axis labels to the plot\n    labs(x = NULL,\n             y = \"number of chop bars\")+\n    # Set the coordinate system for the plot, allowing data points to be partially displayed outside of the plot area.\n  coord_flip(clip = \"off\") +\n    # change the theme a bit so that 1) the axis lines are vertical and 2) the labels are right alligend\n    theme(panel.grid.major.x=element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y=element_blank(),\n                axis.text.x = element_text(vjust = 0.5))\n\n\n\n\n\n\n\nShow different categories using color palettes (stacked)\nIf you want to show different categories, you can use the fill = categorical variable argument inside the aesthetics mapping. To do this, the data needs to be in a long format\n\nexample data (long format)\n\n\nShow the code\nn_chopbars_df_longformat <- n_chopbars_df %>% \n    select(-number_of_chop_bars ) %>% \n    pivot_longer(-c(region_number, region), names_to = \"locality\", values_to = \"number_of_chop_bars\")\n\nn_chopbars_df_longformat %>%\n    kable() %>%\n    kable_styling() %>% \n  scroll_box(height = \"400px\")\n\n\n\n\n \n  \n    region_number \n    region \n    locality \n    number_of_chop_bars \n  \n \n\n  \n    1 \n    Western \n    urban \n    300 \n  \n  \n    1 \n    Western \n    rural \n    267 \n  \n  \n    2 \n    Central \n    urban \n    600 \n  \n  \n    2 \n    Central \n    rural \n    307 \n  \n  \n    3 \n    Greater Accra \n    urban \n    4792 \n  \n  \n    3 \n    Greater Accra \n    rural \n    2198 \n  \n  \n    4 \n    Volta \n    urban \n    78 \n  \n  \n    4 \n    Volta \n    rural \n    200 \n  \n  \n    5 \n    Eastern \n    urban \n    287 \n  \n  \n    5 \n    Eastern \n    rural \n    500 \n  \n  \n    6 \n    Ashanti \n    urban \n    621 \n  \n  \n    6 \n    Ashanti \n    rural \n    5000 \n  \n  \n    7 \n    Western North \n    urban \n    145 \n  \n  \n    7 \n    Western North \n    rural \n    200 \n  \n  \n    8 \n    Ahafo \n    urban \n    339 \n  \n  \n    8 \n    Ahafo \n    rural \n    339 \n  \n  \n    9 \n    Bono \n    urban \n    600 \n  \n  \n    9 \n    Bono \n    rural \n    668 \n  \n  \n    10 \n    Bono East \n    urban \n    1048 \n  \n  \n    10 \n    Bono East \n    rural \n    220 \n  \n  \n    11 \n    Oti \n    urban \n    500 \n  \n  \n    11 \n    Oti \n    rural \n    273 \n  \n  \n    12 \n    Northern \n    urban \n    12 \n  \n  \n    12 \n    Northern \n    rural \n    100 \n  \n  \n    13 \n    Savannah \n    urban \n    503 \n  \n  \n    13 \n    Savannah \n    rural \n    786 \n  \n  \n    14 \n    North East \n    urban \n    142 \n  \n  \n    14 \n    North East \n    rural \n    236 \n  \n  \n    15 \n    Upper East \n    urban \n    326 \n  \n  \n    15 \n    Upper East \n    rural \n    953 \n  \n  \n    16 \n    Upper West \n    urban \n    3456 \n  \n  \n    16 \n    Upper West \n    rural \n    326 \n  \n\n\n\n\n\n\n\nShow the code\nn_chopbars_df_longformat %>% \n  ggplot(mapping = aes(x = reorder(region,number_of_chop_bars), fill = locality ,  y = number_of_chop_bars)) +\n  geom_col(width = 0.8) +\n  gssthemes() +\n  scale_y_continuous( expand = c( 0, 1 ),\n                      limits = nicelimits,\n                                        labels = scales::comma,\n                      breaks = scales::extended_breaks(only.loose = TRUE)) +\n    labs(x = NULL,\n             y = \"number of chop bars\")+\n  coord_flip(clip = \"off\") +\n    scale_fill_manual(values = c(urban = urban_color,\n                                                             rural = rural_color))+\n    theme(panel.grid.major.x=element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y=element_blank(),\n                axis.text.x = element_text(vjust = 0.5))\n\n\n\n\n\n\n\n\nShow different categories using color palettes (dodged)\nInstead of having the categories stacked, you can put them next to each other (stacked)\n\n\nShow the code\nn_chopbars_df_longformat %>% \n  ggplot(mapping = aes(x = reorder(region,number_of_chop_bars), fill = locality ,  y = number_of_chop_bars)) +\n  geom_col(width = 0.8, position = \"dodge\") +\n    geom_text(mapping = aes(label = scales::comma(number_of_chop_bars)), hjust = -0.2, \n                        position = position_dodge(width = 0.8)) +\n  gssthemes() +\n  scale_y_continuous( expand = c( 0, 0 ),\n                      limits = nicelimits,\n                                        labels = scales::comma,\n                      breaks = scales::extended_breaks(only.loose = TRUE)) +\n    labs(x = NULL,\n             y = \"number of chop bars\")+\n  coord_flip(clip = \"off\") +\n    scale_fill_manual(values = c(urban = urban_color,\n                                                             rural = rural_color))+\n    theme(panel.grid.major.x=element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y=element_blank(),\n                axis.text.x = element_text(vjust = 0.5))\n\n\n\n\n\n\n\nBar chart with highlighted category\nSometimes you might want to highlight a single category in a bar chart (for example the National/Ghana average). To highlight also the axis label you need to use the showtext package. It is recommended to put highlight is a similar hue than the other colours. This can be done, using the muted() function from the scales package\n\n\nShow the code\n# this code add the Ghana average\nn_chopbars_df_with_national <- n_chopbars_df %>% \n    add_row( region_number = 0,\n                         region  = \"Ghana\",\n                         number_of_chop_bars = mean(n_chopbars_df$number_of_chop_bars),\n                         urban = mean(n_chopbars_df$urban ),\n                         rural= mean(n_chopbars_df$rural) )\n\n\n\n\nShow the code\nhighlight = function(x, pat, color=\"black\", family=\"\") {\n    ifelse(grepl(pat, x), glue(\"<b style='font-family:{family}; color:{color}'>{x}</b>\"), x)\n}\n\n# Pipe operator to pass data frame to the next line\nn_chopbars_df_with_national %>% \n    mutate(highlight = region == \"Ghana\") %>% \n  # Create a ggplot object and set the aesthetic mappings\n    # use the reorder function to reorder the the bars\n  ggplot(mapping = aes(x = reorder(region,number_of_chop_bars), \n                                         y = number_of_chop_bars,\n                                          fill = highlight)) +\n  geom_col(width = 0.8) +\n    geom_text(mapping = aes(label = scales::comma(number_of_chop_bars)), hjust = -0.2) +\n  gssthemes() +\n  scale_y_continuous( expand = c( 0, 0 ),\n                      limits = nicelimits,\n                                        labels = scales::comma,\n                      breaks = scales::extended_breaks(only.loose = TRUE)) +\n    scale_x_discrete(labels= function(x) highlight(x, \"Ghana\", \"black\")) +\n    scale_fill_manual(values = c(`FALSE` = national_color, \n                                                             `TRUE` = scales::muted(national_color)),\n                                        guide = \"none\") +\n    labs(x = NULL,\n             y = \"number of chop bars\" )+\n  coord_flip(clip = \"off\") +\n    theme(panel.grid.major.x = element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y = element_blank(),\n                axis.text.x = element_text(vjust = 0.5),\n                axis.text.y = element_markdown()) # to make this work you need to make the y axis a markdown format\n\n\n\n\n\n\n\nBar chart with long labels\nTo allow for sufficient plotting space, it is a good idea to add line break to long value labels on the axes. You can use the str_wrap() function to add line breaks\n\nexample data (long labels)\n\n\nShow the code\nn_chopbars_df_long_labels  <- tribble(~question, ~count, \n                                                                            \"number of households eating at chopbars every day\", 678,\n                                                                            \"number of male headed households eating at chopbars once a week\", 1267,\n                                                                            \"number of female headed households eating at chop bars once a week\", 1876)\nn_chopbars_df_long_labels %>%\n    kable() %>%\n    kable_styling()\n\n\n\n\n \n  \n    question \n    count \n  \n \n\n  \n    number of households eating at chopbars every day \n    678 \n  \n  \n    number of male headed households eating at chopbars once a week \n    1267 \n  \n  \n    number of female headed households eating at chop bars once a week \n    1876 \n  \n\n\n\n\n\n\n\nShow the code\nn_chopbars_df_long_labels %>% \n  ggplot(mapping = aes(x = str_wrap(question, 20), y = count)) +\n  geom_col(width = 0.8) +\n    geom_text(mapping = aes(label = scales::comma(count)), hjust = -0.2) +\n  gssthemes() +\n  scale_y_continuous( expand = c( 0, 1 ),\n                      limits = nicelimits,\n                                        labels = scales::comma,\n                      breaks = scales::extended_breaks(only.loose = TRUE)) +\n    labs(x = NULL,\n             y = \"number of chop bars\")+\n  coord_flip(clip = \"off\") +\n    theme(panel.grid.major.x=element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y=element_blank())\n\n\n\n\n\n\n\n\nDiverging Bar chart\nA diverging bar chart is a type of data visualization that displays values of a quantitative variable across two or more categories, where the bars are centered on a common baseline or a central axis. This type of chart is particularly useful for comparing differences in values that can have both positive and negative magnitudes, or when illustrating a relationship between two opposing factors or sentiments.\nIn a diverging bar chart, the bars extend in opposite directions from the central axis, creating a symmetrical pattern. This layout makes it easy to see the differences between categories and to identify patterns and trends within the data.\nWhen choosing a diverging bar chart, make sure it is appropriate for your dataset and the type of information you want to convey. It is important to note that diverging bar charts may not be suitable for all types of data, especially if the differences between categories are not symmetrical or if the data has no clear central point. In such cases, other visualization methods, like standard bar charts or line charts, might be more suitable.\n\nexample data (positive and negative values)\n\n\nShow the code\nchange_in_chop_bars_df <- tribble(~region_number, ~region, ~change,\n                            1,\"Western\", -.35, \n                            2, \"Central\", -.26, \n                            3, \"Greater Accra\", .67,\n                            4, \"Volta\", -.18, \n                            5, \"Eastern\", .47, \n                            6, \"Ashanti\",.56, \n                            7, \"Western North\", -.2,\n                            8,  \"Ahafo\", .61, \n                            9, \"Bono\",.12,\n                            10,\"Bono East\", 0.01,\n                            11,\"Oti\",.07,\n                            12,\"Northern\", .11,\n                            13,\"Savannah\", .12,\n                            14,\"North East\",-.31,\n                            15,\"Upper East\",0,\n                            16, \"Upper West\", .265)\n\nchange_in_chop_bars_df %>% \n    kable() %>%\n    kable_styling() %>% \n  scroll_box(height = \"400px\")\n\n\n\n\n \n  \n    region_number \n    region \n    change \n  \n \n\n  \n    1 \n    Western \n    -0.350 \n  \n  \n    2 \n    Central \n    -0.260 \n  \n  \n    3 \n    Greater Accra \n    0.670 \n  \n  \n    4 \n    Volta \n    -0.180 \n  \n  \n    5 \n    Eastern \n    0.470 \n  \n  \n    6 \n    Ashanti \n    0.560 \n  \n  \n    7 \n    Western North \n    -0.200 \n  \n  \n    8 \n    Ahafo \n    0.610 \n  \n  \n    9 \n    Bono \n    0.120 \n  \n  \n    10 \n    Bono East \n    0.010 \n  \n  \n    11 \n    Oti \n    0.070 \n  \n  \n    12 \n    Northern \n    0.110 \n  \n  \n    13 \n    Savannah \n    0.120 \n  \n  \n    14 \n    North East \n    -0.310 \n  \n  \n    15 \n    Upper East \n    0.000 \n  \n  \n    16 \n    Upper West \n    0.265 \n  \n\n\n\n\n\n\n\nShow the code\nchange_in_chop_bars_df %>% \n    mutate(pos_neg = ifelse(change >0, \"positive\", \"negative\")) %>% \n    ggplot(aes(x = reorder(region, change),\n                         y = change,\n                         fill =pos_neg)) +\n  geom_col() +\n  gssthemes() +\n        scale_fill_manual(values = c(positive = positive_color,\n                                                             negative = negative_color))+ \n  scale_y_continuous(labels = scales::percent) +\n    labs(x = NULL,\n             y = \"change in number\\nof chop bars\")+\n  coord_flip(clip = \"off\") +\n    theme(panel.grid.major.x=element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y=element_blank(),\n                axis.text.x = element_text(vjust = 0.5),\n                legend.position = \"none\") +\n      geom_hline(yintercept = 0, linetype = \"dashed\", color = \"black\")\n\n\n\n\n\n\n\n\nBar chart with hidden labels\nSometimes, you might want to hide certain text labels. For example, if the value is too small. In the example below, any value under 12% is hidden.\n\n\nShow the code\nn_chopbars_df_longformat %>%\n    group_by(region) %>%\n    mutate(percentage = number_of_chop_bars / sum(number_of_chop_bars)) %>%\n    ungroup() %>%\n    ggplot(aes(x = region,  y = percentage, fill = locality)) +\n    geom_col() +\n    coord_flip(expand = FALSE,\n                         clip = \"off\") +\n    scale_y_continuous(labels = scales::percent) +\n    geom_text(aes(\n        label = ifelse(percentage < .12, \"\",\n                                     paste0(format(round(percentage * 100, 1), nsmall =1), \"%\")),\n        y = ifelse(locality == \"urban\", 0.04, 0.91)\n    ),\n    size = 3.5,\n    position = \"stack\") +\n    gssthemes() +\n    labs(x = NULL,\n             y = \"share of chop bars\") +\n    scale_fill_manual(\n        values = c(urban = urban_color,\n                             rural = rural_color),\n        labels = c(\"Rural\", \"Urban\")\n    ) +\n    guides(fill = guide_legend(reverse = TRUE)) +\n    theme(\n        panel.grid.major.x = element_line(color = \"gray\", size = 0.25),\n        panel.grid.major.y = element_blank(),\n        axis.text.x = element_text(vjust = 0.5)\n    )\n\n\n\n\n\n\n\nFilled bar chart with from positive to negative\nYou can use a filled bar chart to show relative shares within a group. This example shows the percentage of different opininions.\n\nexample data (sentiment data)\n\n\nShow the code\nsentiment_chop_bars <- tribble(~location, ~ `very positive`, ~ `positive`, ~  `neutral`,  ~ `negative`, ~\"very negative\",\n                \"urban\", 15.2, 17.3, 50.2, 8, 9.3,\n                \"rural\" , 25.2,34.2,31.2,6,3.4,\n                \"national\", 20.2,25.75, 40.7,7,6.35)\n\nsentiment_chop_bars %>% \n        kable() %>%\n    kable_styling() \n\n\n\n\n \n  \n    location \n    very positive \n    positive \n    neutral \n    negative \n    very negative \n  \n \n\n  \n    urban \n    15.2 \n    17.30 \n    50.2 \n    8 \n    9.30 \n  \n  \n    rural \n    25.2 \n    34.20 \n    31.2 \n    6 \n    3.40 \n  \n  \n    national \n    20.2 \n    25.75 \n    40.7 \n    7 \n    6.35 \n  \n\n\n\n\n\n\n\nShow the code\nsentiment_chop_bars %>%\n    pivot_longer(-location, names_to = \"sentiment\") %>%\n    mutate(percent = value / 100) %>%\n    # make sure the sentiment labels are factors so that they can be ordered correctly\n    mutate(sentiment = factor(\n        sentiment,\n        levels = c(\n            \"very positive\",\n            \"positive\",\n            \"neutral\",\n            \"negative\",\n            \"very negative\"\n        )\n    )) %>%\n    ggplot(aes(x = location, y = percent, fill = sentiment)) +\n    geom_col(width = 0.8, position = \"stack\") +\n    gssthemes() +\n    scale_y_continuous(labels = scales::percent,\n                                         expand = c(0, 0)) +\n    labs(x = NULL,\n             y = \"percentage\",\n             fill = \"opinion on chop bars\") +\n    coord_flip(clip = \"off\") +\n    scale_fill_manual(values = posneutralneg_color_scheme) +\n    theme(\n        panel.grid.major.x = element_line(color = \"gray\", size = 0.25),\n        panel.grid.major.y = element_blank(),\n        legend.position = \"top\"\n    ) +\n    guides(fill = guide_legend(\n        nrow = 2,\n        byrow = TRUE,\n        title.position = \"top\"\n    ))\n\n\n\n\n\n\n\n\nmultiple plots next to each other using facet_wrap()\nR’s faceting system is a powerful way to make “small multiples”.\n\n\nShow the code\nn_chopbars_df_longformat %>% \n  ggplot(mapping = aes(x = reorder(region,number_of_chop_bars), fill = locality ,  y = number_of_chop_bars)) +\n  geom_col(width = 0.8, position = \"dodge\") +\n    geom_text(mapping = aes(label = scales::comma(number_of_chop_bars)), hjust = -0.2, \n                        position = position_dodge(width = 0.8)) +\n\n  gssthemes() +\n  scale_y_continuous( expand =c(0,NA),\n                                        limits = c(0, 7000),\n                                        labels = scales::comma,\n                      breaks = scales::extended_breaks(only.loose = TRUE)) +\n    labs(x = NULL,\n             y = \"number of chop bars\")+\n  coord_flip(clip = \"off\") +\n    scale_fill_manual(values = c(urban = urban_color,\n                                                             rural = rural_color))+\n    theme(panel.grid.major.x=element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y=element_blank(),\n                legend.position = \"none\") +\n    # use the facet_wrap function to make small multiples\n    facet_wrap(~locality)\n\n\n\n\n\n\n\nmultiple plots next to each other with separate bar legends\nSometimes using facet_wrap is not sufficient, especially if you want to add different legends to sub-plots, but still want to align different axis of plots into a single plots. To do this you can create 3 seperate plots and merge them using the patchwork package\n\nexample data (long format with quarters)\n\n\nShow the code\nn_chopbars_df_region_quarters  <- tribble(~region_number, ~region, ~national, ~urban, ~rural, ~quarter,\n1,\"Western\", 567, 300, 267, \"Q1\",\n2, \"Central\", 907, 600, 307,\"Q1\",\n3, \"Greater Accra\", 6990, 4792, 2198, \"Q1\",\n4, \"Volta\", 278, 78, 200, \"Q1\",\n5, \"Eastern\", 787, 287, 500,\"Q1\",\n6, \"Ashanti\",5621, 621, 5000,\"Q1\",\n7, \"Western North\", 345, 145, 200,\"Q1\",\n8,  \"Ahafo\", 678, 339, 339,\"Q1\",\n9, \"Bono\",1268, 600, 668, \"Q1\",\n10,\"Bono East\", 1268,1048, 220,\"Q1\",\n11,\"Oti\",773, 500, 273, \"Q1\",\n12,\"Northern\", 112, 12, 100,\"Q1\",\n13,\"Savannah\", 1289,503, 786, \"Q1\",\n14,\"North East\",378, 142, 236,\"Q1\",\n15,\"Upper East\",1279,326, 953, \"Q1\",\n16, \"Upper West\", 3782, 3456, 326, \"Q1\",\n1,\"Western\", 602, 302, 300, \"Q2\",\n2, \"Central\", 1000, 600, 400,\"Q2\",\n3, \"Greater Accra\", 7990, 4792, 3198, \"Q2\",\n4, \"Volta\", 346, 93, 253, \"Q2\",\n5, \"Eastern\", 887, 387, 500,\"Q2\",\n6, \"Ashanti\",6000, 2000, 4000,\"Q2\",\n7, \"Western North\", 445, 195, 250,\"Q2\",\n8,  \"Ahafo\", 701, 339, 362,\"Q2\",\n9, \"Bono\",1444, 722, 722, \"Q2\",\n10,\"Bono East\", 1368,1048, 290,\"Q2\",\n11,\"Oti\",912, 534, 378, \"Q2\",\n12,\"Northern\", 122, 17, 105,\"Q2\",\n13,\"Savannah\", 1289,503, 786, \"Q2\",\n14,\"North East\",534, 182, 352,\"Q2\",\n15,\"Upper East\",1510,400, 1110, \"Q2\",\n16, \"Upper West\", 3991, 3496, 495, \"Q2\")\n\n\nn_chopbars_df_region_quarters %>% \n    kable() %>%\n    kable_styling() %>% \n  scroll_box(height = \"400px\")\n\n\n\n\n \n  \n    region_number \n    region \n    national \n    urban \n    rural \n    quarter \n  \n \n\n  \n    1 \n    Western \n    567 \n    300 \n    267 \n    Q1 \n  \n  \n    2 \n    Central \n    907 \n    600 \n    307 \n    Q1 \n  \n  \n    3 \n    Greater Accra \n    6990 \n    4792 \n    2198 \n    Q1 \n  \n  \n    4 \n    Volta \n    278 \n    78 \n    200 \n    Q1 \n  \n  \n    5 \n    Eastern \n    787 \n    287 \n    500 \n    Q1 \n  \n  \n    6 \n    Ashanti \n    5621 \n    621 \n    5000 \n    Q1 \n  \n  \n    7 \n    Western North \n    345 \n    145 \n    200 \n    Q1 \n  \n  \n    8 \n    Ahafo \n    678 \n    339 \n    339 \n    Q1 \n  \n  \n    9 \n    Bono \n    1268 \n    600 \n    668 \n    Q1 \n  \n  \n    10 \n    Bono East \n    1268 \n    1048 \n    220 \n    Q1 \n  \n  \n    11 \n    Oti \n    773 \n    500 \n    273 \n    Q1 \n  \n  \n    12 \n    Northern \n    112 \n    12 \n    100 \n    Q1 \n  \n  \n    13 \n    Savannah \n    1289 \n    503 \n    786 \n    Q1 \n  \n  \n    14 \n    North East \n    378 \n    142 \n    236 \n    Q1 \n  \n  \n    15 \n    Upper East \n    1279 \n    326 \n    953 \n    Q1 \n  \n  \n    16 \n    Upper West \n    3782 \n    3456 \n    326 \n    Q1 \n  \n  \n    1 \n    Western \n    602 \n    302 \n    300 \n    Q2 \n  \n  \n    2 \n    Central \n    1000 \n    600 \n    400 \n    Q2 \n  \n  \n    3 \n    Greater Accra \n    7990 \n    4792 \n    3198 \n    Q2 \n  \n  \n    4 \n    Volta \n    346 \n    93 \n    253 \n    Q2 \n  \n  \n    5 \n    Eastern \n    887 \n    387 \n    500 \n    Q2 \n  \n  \n    6 \n    Ashanti \n    6000 \n    2000 \n    4000 \n    Q2 \n  \n  \n    7 \n    Western North \n    445 \n    195 \n    250 \n    Q2 \n  \n  \n    8 \n    Ahafo \n    701 \n    339 \n    362 \n    Q2 \n  \n  \n    9 \n    Bono \n    1444 \n    722 \n    722 \n    Q2 \n  \n  \n    10 \n    Bono East \n    1368 \n    1048 \n    290 \n    Q2 \n  \n  \n    11 \n    Oti \n    912 \n    534 \n    378 \n    Q2 \n  \n  \n    12 \n    Northern \n    122 \n    17 \n    105 \n    Q2 \n  \n  \n    13 \n    Savannah \n    1289 \n    503 \n    786 \n    Q2 \n  \n  \n    14 \n    North East \n    534 \n    182 \n    352 \n    Q2 \n  \n  \n    15 \n    Upper East \n    1510 \n    400 \n    1110 \n    Q2 \n  \n  \n    16 \n    Upper West \n    3991 \n    3496 \n    495 \n    Q2 \n  \n\n\n\n\n\n\n\nShow the code\nn_chopbars_df_region_quarters_longformat <- n_chopbars_df_region_quarters %>% \n    pivot_longer(-c(region_number, region, quarter),\n                             names_to = \"locality\",\n                             values_to = \"number_of_chop_bars\"\n                             )\n\n\np_national <- n_chopbars_df_region_quarters_longformat %>% \n    filter(locality == \"national\") %>% \n    ggplot(mapping = aes(x     = reorder(region,desc(region_number)),\n                                             y     = number_of_chop_bars)) +\n    geom_col(width = 0.8,\n                     aes( alpha = reorder(quarter, desc(quarter))),\n                     position =  position_dodge(width = 0.8),\n                     fill = national_color)+\n    geom_text(mapping = aes(label = scales::comma(number_of_chop_bars),\n                                                    group = reorder(quarter, desc(quarter))),\n                        hjust = -0.2,\n                        position = position_dodge(width = 0.8)\n    ) +\n    gssthemes() +\n    scale_y_continuous( limits = c(0, 10000),\n                                            labels = scales::comma) +\n    scale_alpha_manual(values = seq(\n        from = 0.5,\n        to = 1,\n        length.out = 2\n    ),\n    guide = guide_legend(reverse = TRUE))+\n    labs(x = NULL,\n             alpha = NULL,\n             y = \"number of chop bars\",\n             title = \"National\")+\n    coord_flip(clip = \"off\") +\n    theme(panel.grid.major.x = element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y = element_blank(),\n                legend.position = \"top\",\n                axis.text.x = element_text(vjust = 0.5),\n                plot.title=element_text(hjust=0.5),\n        plot.subtitle=element_text(hjust=0.5))\n\n\n\np_urban <- n_chopbars_df_region_quarters_longformat %>% \n    filter(locality == \"urban\") %>% \n    ggplot(mapping = aes(x     = reorder(region,desc(region_number)),\n                                             y     = number_of_chop_bars,\n                                             group = reorder(quarter, desc(quarter)))) +\n    geom_col(width = 0.8,\n                     aes( alpha = reorder(quarter, desc(quarter))),\n                     position = \"dodge\",\n                     fill = urban_color) +\n    geom_text(mapping = aes(label = scales::comma(number_of_chop_bars)), hjust = -0.2, \n                        position = position_dodge(width = 0.8)) +\n    gssthemes() +\n    scale_y_continuous( limits = c(0, 10000),\n                                            labels = scales::comma) +\n    scale_alpha_manual(values = seq(\n        from = 0.5,\n        to = 1,\n        length.out = 2\n    ),\n    guide = guide_legend(reverse = TRUE))+\n    labs(x = NULL,\n             alpha = NULL,\n             y = \"number of chop bars\",\n             title = \"Urban\")+\n    coord_flip(clip = \"off\") +\n  # move the title text and subtitle text to the middle\n  theme(plot.title=element_text(hjust=0.5),\n        plot.subtitle=element_text(hjust=0.5),\n            panel.grid.major.x = element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y = element_blank(),\n                axis.ticks.y= element_blank(),              \n                legend.position = \"top\",\n                axis.text.y = element_blank())\n\np_rural <- n_chopbars_df_region_quarters_longformat %>% \n    filter(locality == \"rural\") %>% \n    ggplot(mapping = aes(x     = reorder(region,desc(region_number)),\n                                             y     = number_of_chop_bars,\n                                             group = reorder(quarter, desc(quarter)))) +\n    geom_col(width = 0.8,\n                     aes( alpha = reorder(quarter, desc(quarter))),\n                     position = \"dodge\",\n                     fill = rural_color) +\n    geom_text(mapping = aes(label = scales::comma(number_of_chop_bars)), hjust = -0.2, \n                        position = position_dodge(width = 0.8)) +\n    gssthemes() +\n    scale_y_continuous( limits = c(0, 10000),\n                                            labels = scales::comma) +\n    scale_alpha_manual(values = seq(\n        from = 0.5,\n        to = 1,\n        length.out = 2\n    ),\n    guide = guide_legend(reverse = TRUE))+\n    labs(x = NULL,\n             alpha = NULL,\n             y = \"number of chop bars\",\n             title = \"Rural\")+\n    coord_flip(clip = \"off\") +\n  # move the title text and subtitle text to the middle\n  theme(plot.title=element_text(hjust=0.5),\n        plot.subtitle=element_text(hjust=0.5),\n            panel.grid.major.x = element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y = element_blank(),\n                axis.ticks.y= element_blank(),              \n                legend.position = \"top\",\n                axis.text.y = element_blank())\n\n\np_national + p_urban + p_rural\n\n\n\n\n\n\n\n\nbar chart with a singe category hightlighted on top\nwith a bit of effort, a variable can also be shown on its own. In this case you can use facet_grid()\n\n\nShow the code\nn_chopbars_df_with_national   %>% \n    mutate(highlight = region == \"Ghana\") %>% \n    # Create a ggplot object and set the aesthetic mappings\n    # use the reorder function to reorder the the bars\n    ggplot(mapping = aes(x = reorder(region,number_of_chop_bars), \n                                             y = number_of_chop_bars,\n                                             fill = highlight)) +\n    geom_col(width = 0.8) +\n    geom_text(mapping = aes(label = scales::comma(number_of_chop_bars)), hjust = -0.2) +\n    gssthemes() +\n    scale_y_continuous( expand = c( 0, 0 ),\n                                            limits = nicelimits,\n                                            labels = scales::comma,\n                                            breaks = scales::extended_breaks(only.loose = TRUE)) +\n    scale_x_discrete(labels= function(x) highlight(x, \"Ghana\", \"black\")) +\n    scale_fill_manual(values = c(`FALSE` = national_color, \n                                                             `TRUE` = scales::muted(national_color)),\n                                        guide = \"none\") +\n    labs(x = NULL,\n             y = \"number of chop bars\" )+\n    coord_flip(clip = \"off\") +\n    theme(panel.grid.major.x = element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y = element_blank(),\n                axis.text.x = element_text(vjust = 0.5),\n                strip.text = element_blank(),\n                axis.text.y = element_markdown()) +\n    facet_grid(fct_rev(as.factor(highlight))~.,scales = \"free\",\n                         space = \"free_y\")# to make this work you need to make the y axis a markdown format"
  },
  {
    "objectID": "graphics-guide.html#population-pyramid",
    "href": "graphics-guide.html#population-pyramid",
    "title": "Data Visualization Guidelines",
    "section": "Population pyramid",
    "text": "Population pyramid\nAn illustration of the age and gender distribution of a population is called a population pyramid. It is widely used to illustrate both the current trend in population growth and a population’s makeup. In most cases, the chart is divided into two equal parts, one for males and the other for women. The age groups are frequently displayed along a vertical axis, with the youngest age group at the bottom and the oldest at the top. To make sure the ggplot organises that age categorically, instead of alphabetically, you need to make sure you make the age grouping a factor variable. You can use scale_y_continuous(labels = abs) to make the variables at the base absolute values.\n\nexample data (Population pyramid)\n\n\nShow the code\n# Sample data\nage_pyramid_df <- data.frame(\n  age_group = rep(c(\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \"65-69\", \"70-74\", \"75+\"), 2),\n  gender = rep(c(\"Male\", \"Female\"), each = 16),\n  count = c(100, 95, 90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25,\n            105, 100, 95, 90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30)\n) %>% \n    mutate(age_group  = factor(age_group, levels = c(\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \"25-29\", \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \"65-69\", \"70-74\", \"75+\")))\n\n\nage_pyramid_df %>% \n    kable() %>%\n    kable_styling() %>% \n  scroll_box(height = \"400px\")\n\n\n\n\n \n  \n    age_group \n    gender \n    count \n  \n \n\n  \n    0-4 \n    Male \n    100 \n  \n  \n    5-9 \n    Male \n    95 \n  \n  \n    10-14 \n    Male \n    90 \n  \n  \n    15-19 \n    Male \n    85 \n  \n  \n    20-24 \n    Male \n    80 \n  \n  \n    25-29 \n    Male \n    75 \n  \n  \n    30-34 \n    Male \n    70 \n  \n  \n    35-39 \n    Male \n    65 \n  \n  \n    40-44 \n    Male \n    60 \n  \n  \n    45-49 \n    Male \n    55 \n  \n  \n    50-54 \n    Male \n    50 \n  \n  \n    55-59 \n    Male \n    45 \n  \n  \n    60-64 \n    Male \n    40 \n  \n  \n    65-69 \n    Male \n    35 \n  \n  \n    70-74 \n    Male \n    30 \n  \n  \n    75+ \n    Male \n    25 \n  \n  \n    0-4 \n    Female \n    105 \n  \n  \n    5-9 \n    Female \n    100 \n  \n  \n    10-14 \n    Female \n    95 \n  \n  \n    15-19 \n    Female \n    90 \n  \n  \n    20-24 \n    Female \n    85 \n  \n  \n    25-29 \n    Female \n    80 \n  \n  \n    30-34 \n    Female \n    75 \n  \n  \n    35-39 \n    Female \n    70 \n  \n  \n    40-44 \n    Female \n    65 \n  \n  \n    45-49 \n    Female \n    60 \n  \n  \n    50-54 \n    Female \n    55 \n  \n  \n    55-59 \n    Female \n    50 \n  \n  \n    60-64 \n    Female \n    45 \n  \n  \n    65-69 \n    Female \n    40 \n  \n  \n    70-74 \n    Female \n    35 \n  \n  \n    75+ \n    Female \n    30 \n  \n\n\n\n\n\n\n\nShow the code\nage_pyramid_df %>% \n    ggplot() +\n  geom_bar(aes(x = age_group, \n                         y = ifelse(gender == \"Male\", -count, count), fill = gender), stat = \"identity\") +\n  scale_y_continuous(labels = abs) +\n    scale_fill_manual(values = c(\"Male\" = male_color,\n                                                            \"Female\" = female_color)) +\n  coord_flip() +\n    labs(x = \"age group\", y = \"count\") +\n    gssthemes()"
  },
  {
    "objectID": "graphics-guide.html#line-chart-multiple-categories",
    "href": "graphics-guide.html#line-chart-multiple-categories",
    "title": "Data Visualization Guidelines",
    "section": "Line chart multiple categories",
    "text": "Line chart multiple categories\n\nexample data (Line Chart with 2 categories)\n\n\nShow the code\nline_chart_df_by_sex <-tribble(~year, ~Male, ~Female,\n                                            1960,4572, 2562,\n                                            1984,5572, 4572,\n                                            2000,6787, 5887,\n                                            2010,7211, 6500,\n                                            2021, 8000, 7900) %>% \n    pivot_longer(-c(year), \n                             names_to = \"sex\",\n                             values_to = \"number\")\n\nline_chart_df_by_sex %>% \n    kable() %>%\n    kable_styling() %>% \n  scroll_box(height = \"400px\")\n\n\n\n\n \n  \n    year \n    sex \n    number \n  \n \n\n  \n    1960 \n    Male \n    4572 \n  \n  \n    1960 \n    Female \n    2562 \n  \n  \n    1984 \n    Male \n    5572 \n  \n  \n    1984 \n    Female \n    4572 \n  \n  \n    2000 \n    Male \n    6787 \n  \n  \n    2000 \n    Female \n    5887 \n  \n  \n    2010 \n    Male \n    7211 \n  \n  \n    2010 \n    Female \n    6500 \n  \n  \n    2021 \n    Male \n    8000 \n  \n  \n    2021 \n    Female \n    7900 \n  \n\n\n\n\n\n\n\nShow the code\nline_chart_df_by_sex %>%\n    ggplot(aes(x = year, y = number, color = sex )) +\n    geom_line(linewidth = 1.5) +\n    geom_point(size = 3) +\n    scale_y_continuous() + \n    scale_color_manual(values = c(\"Male\" = male_color,\n                                                             \"Female\" = female_color))  +\n        scale_x_continuous(breaks = as.numeric(levels(line_chart_df$year))) +\n        scale_y_continuous( expand = c( 0, 0 ),\n                                            limits = nicelimits,\n                                            labels = scales::comma,\n                                            breaks = scales::extended_breaks(only.loose = TRUE)) +\n\n    gssthemes() +\n    theme(legend.key = element_blank())"
  },
  {
    "objectID": "graphics-guide.html#line-chart-multiple-categories-with-labels",
    "href": "graphics-guide.html#line-chart-multiple-categories-with-labels",
    "title": "Data Visualization Guidelines",
    "section": "Line chart multiple categories with labels",
    "text": "Line chart multiple categories with labels\nTo add value labels to a line chart, you can use the geom_text() function or the geom_text_repel() function from the ggrepel package if you want to make sure the labels do not overlap. You can use show.legend=FALSE to make sure the legend does not contain text.\n\n\nShow the code\nline_chart_df_by_sex %>%\n    ggplot(aes(x = year, y = number, color = sex)) +\n    geom_line(linewidth = 1.5) +\n    geom_point(size = 3) +\n    geom_text(\n        aes(label = number),\n        vjust = ifelse(line_chart_df_by_sex$sex == \"Male\",-1, 2),\n        show.legend = FALSE\n    ) +\n    scale_color_manual(values = c(\"Male\" = male_color,\n                                                                \"Female\" = female_color))  +\n    scale_x_continuous(breaks = as.numeric(levels(line_chart_df$year)),\n                                         limits = c(1960, 2030)) +\n    scale_y_continuous(\n        expand = c(0 , 0),\n        limits = c(0, 9000),\n        labels = scales::comma,\n        breaks = scales::extended_breaks(only.loose = TRUE)\n    ) +\n    gssthemes() +\n    theme(legend.key = element_blank())"
  },
  {
    "objectID": "graphics-guide.html#line-chart-with-group-labels-showing-at-end-of-line",
    "href": "graphics-guide.html#line-chart-with-group-labels-showing-at-end-of-line",
    "title": "Data Visualization Guidelines",
    "section": "Line chart with group labels showing at end of line",
    "text": "Line chart with group labels showing at end of line\nInstead of a legend, you can also add the line labels to the end of the lines\n\n\nShow the code\nlibrary(ggrepel)\nline_chart_df_by_sex %>%\n    # change the sex label so that it only shows up at the end\n    # by making it NA for all other years\n    mutate(sex_label = ifelse(year == max(year), as.character(sex), NA_character_)) %>% \n    ggplot(aes(x = year, y = number, color = sex)) +\n    geom_line(linewidth = 1.5) +\n    geom_point(size = 3) +\n  geom_text_repel(aes(label = sex_label), hjust = -0.2,\n                                  xlim = c(max(line_chart_df_by_sex$year) +5, NA),\n                                direction = \"y\",\n                                    hjust         = 0,\n                                       segment.curvature = -1e-20,\n                                segment.angle = 90,\n                                  min.segment.length = 0.2,\n                                        show.legend = FALSE) +\n    scale_color_manual(values = c(\"Male\" = male_color,\n                                                                \"Female\" = female_color))  +\n    scale_x_continuous(breaks = unique(line_chart_df_by_sex$year),\n                                         limits = c(1960, max(line_chart_df_by_sex$year) + 20)) +\n    scale_y_continuous(\n        expand = c(0 , 0),\n        limits = c(0, 9000),\n        labels = scales::comma,\n        breaks = scales::extended_breaks(only.loose = TRUE)\n        ) +\n    gssthemes() +\n    theme(legend.position = \"none\")"
  },
  {
    "objectID": "graphics-guide.html#step-chart",
    "href": "graphics-guide.html#step-chart",
    "title": "Data Visualization Guidelines",
    "section": "step chart",
    "text": "step chart\nA step chart is a suitable choice over a line chart when you want to represent data that changes at specific intervals and remains constant between those intervals. It is particularly useful for visualizing data with discrete jumps or where the value holds steady until the next change occurs.\nStep charts are often used in scenarios where data has a clear start and end point for each period, such as price changes, tax rate adjustments, or policy changes. By using a step chart, you can emphasize the moments when the changes happen and highlight the periods of stability between them, making it easier to identify and analyze the impacts of these changes. In contrast, a line chart would connect the data points directly, which might imply a continuous transition between values, potentially misrepresenting the nature of the data.\n\n\nShow the code\nline_chart_df %>% \n    mutate(year = as.numeric(levels(year))) %>% \n    ggplot(aes(x = year, y = elder)) +\n    geom_step(color = national_color, linewidth = 1.5) +\n    scale_x_continuous(breaks = as.numeric(levels(line_chart_df$year)))  +\n      gssthemes() +\n  scale_y_continuous( expand = c( 0, 0 ),\n                      limits = c(0,2500000),\n                      breaks = scales::extended_breaks(only.loose = TRUE),\n                                        labels = scales::comma)"
  },
  {
    "objectID": "graphics-guide.html#smoothed-line-chart",
    "href": "graphics-guide.html#smoothed-line-chart",
    "title": "Data Visualization Guidelines",
    "section": "Smoothed line chart",
    "text": "Smoothed line chart\nIn some cases, you might want to use a smoothed line (that still goes through all the points). In this case you can use geom_xspline(spline_shape = -0.5) from the ggalt package\n\n\nShow the code\nlibrary(ggalt)\nline_chart_df %>% \n    mutate(year = as.numeric(levels(year))) %>% \n    ggplot(aes(x = year, y = elder)) +\n    geom_point(color = national_color, size =3)+ \n    ggalt::geom_xspline(color = national_color, size = 1.5, spline_shape = -0.5) +\n    scale_x_continuous(breaks = as.numeric(levels(line_chart_df$year))) +\n    gssthemes()"
  },
  {
    "objectID": "graphics-guide.html#lollipop-chart",
    "href": "graphics-guide.html#lollipop-chart",
    "title": "Data Visualization Guidelines",
    "section": "lollipop chart",
    "text": "lollipop chart\nA lollipop chart is used visually represent time series data where magnitude of occurrence is to be communicated. It shows the relationship between a numeric and a categorical variable, as well as identifying trends or patterns over time. They can be used to display numerical data such as quantities and magnitude. To make sure that the data is shown above the right year, you can use as.factor() to make the numeric value a factor\n\n\nShow the code\n# Create lollipop plot\nline_chart_df %>%\n    ggplot(mapping=aes(x =year, y = elder)) + \n  geom_segment(aes(xend = year, yend = 0), linewidth = 1) +\n  geom_point(aes(size = elder),colour=national_color) +\n  geom_text(aes(label =scales::comma(elder)), vjust= ifelse(line_chart_df$elder<500000, -1.5,-4))+\n  scale_size(range=c(2,24)) +\n  labs(x = \"Census Year\", y = \"Population\") +\n  gssthemes() +\n  theme(legend.position = \"none\") +\n  scale_y_continuous( expand = c( 0, 0 ),\n                                        # due to bubble size scale limit has to be manually set\n                      limits = c(0,2500000),\n                      breaks = scales::extended_breaks(only.loose = TRUE),\n                                        labels = scales::comma)"
  },
  {
    "objectID": "graphics-guide.html#area-chart-single-category",
    "href": "graphics-guide.html#area-chart-single-category",
    "title": "Data Visualization Guidelines",
    "section": "Area chart (single category)",
    "text": "Area chart (single category)\nAn area chart is a graphical representation used to display quantitative data over a period of time or across different categories. A user should use an area chart when they want to emphasize the magnitude of change or cumulative totals, visualize the composition of data, or show trends across multiple series while highlighting their differences.\n\n\nShow the code\nline_chart_df %>% \n    mutate(year = as.numeric(levels(year))) %>% \n    ggplot(aes(x = year, y = elder)) +\n    geom_line(color = national_color, linewidth = 1.5) +\n    geom_area(fill = national_color, alpha = .5)+\n    scale_x_continuous(breaks = as.numeric(levels(line_chart_df$year))) +\n    gssthemes()"
  },
  {
    "objectID": "graphics-guide.html#area-chart-stacked",
    "href": "graphics-guide.html#area-chart-stacked",
    "title": "Data Visualization Guidelines",
    "section": "Area chart (stacked)",
    "text": "Area chart (stacked)\n\n\nShow the code\nline_chart_df_by_sex %>% \n    ggplot(aes(x=year, y=number, fill=sex)) + \n    geom_area() +\n    scale_fill_manual(values = c(\"Male\" = male_color,\n                                                             \"Female\" = female_color)) +\n    scale_y_continuous( expand = c( 0, 0 ),\n                                            # due to bubble size scale limit has to be manually set\n                                            breaks = scales::extended_breaks(only.loose = TRUE),\n                                            labels = scales::comma,\n                                            limits = nicelimits) +\n    gssthemes()"
  },
  {
    "objectID": "graphics-guide.html#area-chart-proportional",
    "href": "graphics-guide.html#area-chart-proportional",
    "title": "Data Visualization Guidelines",
    "section": "Area chart (Proportional)",
    "text": "Area chart (Proportional)\nIn a proportional stacked area chart, the total for each year consistently amounts to one hundred percent, with the values of individual groups expressed as percentages. First you need to compute these relative percentages for each year\n\n\nShow the code\nline_chart_df_by_sex  %>%\n  group_by(year ) %>%\n  mutate(percentage = number / sum(number)) %>% \n    ggplot(aes(x=year, y= percentage, fill=sex)) + \n    geom_area(alpha = .7) +\n    scale_fill_manual(values = c(\"Male\" = male_color,\n                                                             \"Female\" = female_color)) +\n    scale_y_continuous( expand = c( 0, 0 ),\n                                            # due to bubble size scale limit has to be manually set\n                                            breaks = scales::extended_breaks(only.loose = TRUE),\n                                            labels = scales::percent,\n                                            limits = nicelimits) +\n    gssthemes()"
  },
  {
    "objectID": "graphics-guide.html#ribbon-chart",
    "href": "graphics-guide.html#ribbon-chart",
    "title": "Data Visualization Guidelines",
    "section": "Ribbon chart",
    "text": "Ribbon chart\nOne can use a ribbon chart to put some extra attention to the difference between two lines. To do so, you will have to create two dataframes, one in long format and one in wide format.\n\n\nShow the code\n# Create the data frame\narea_df <- tibble(\n    year = c(2010, 2011, 2012, 2013, 2014, 2015),\n    `rural growth` = c(2.1, 2.5, 2.8, 3.2, 3.5, 3.9),\n    `urban growth` = c(2.8, 3.1, 3.4, 3.7, 4.0, 4.3)\n)\n\n\n\n\nShow the code\narea_df_long <- area_df %>%\n    pivot_longer(-year)\n# Create the plot\nggplot() +\n    geom_line(data = area_df_long,\n                        aes(x = year, y = value, col = name),\n                        linewidth = 2) +\n    geom_ribbon(\n        data = area_df,\n        aes(x = year,\n                ymin = `rural growth`,\n                ymax =  `urban growth`),\n        alpha = 0.2,\n        fill = national_color\n    ) +\n        scale_color_manual(values = c( `urban growth` = urban_color,\n                                                             `rural growth` = rural_color)) +\n    labs(color = NULL, x = \"Year\", y = \"Growth (%)\") +\n    gssthemes() +\n    theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "graphics-guide.html#density-chart",
    "href": "graphics-guide.html#density-chart",
    "title": "Data Visualization Guidelines",
    "section": "Density Chart",
    "text": "Density Chart\nA density plot, also known as a kernel density plot, is a sort of graphical data representation that depicts data distribution over a continuous interval or range of values. It is similar to a histogram in that it displays the estimated probability density function of the data rather than the frequency of data points in each bin.\nIn data analysis and statistics, density plots are often used to show the shape of the data distribution, including information about the mode, skewness, and outliers. They are especially effective for spotting trends in data that other types of plots, such as scatterplots or boxplots, may miss.\n\nexample data (density and histogram)\n\n\nShow the code\n# Create a data frame with three columns for agriculture, industry, and services\ndensitydf <- tibble(agriculture = rnorm(1000, mean = 50, sd = 10),\n                   industry = rnorm(1000, mean = 75, sd = 15),\n                   services = rnorm(1000, mean = 100, sd = 20))\n\n\n# Convert the data frame to a long format\ndensitydf_long <- densitydf %>%\n    pivot_longer(cols = everything(), \n                             names_to = \"sector\")\n\n\n\n\nShow the code\n# Create a density plot using geom_density with colors red, blue, and green\ndensitydf_long %>%\n    ggplot(aes(x = value, fill = sector)) +\n  geom_density(alpha = 0.5) +\n  scale_fill_manual(values = c(industry = industry_color,\n                                                         agriculture = agric_color,\n                                                         services = services_color)) +\n  labs(title = \"Density Plot for Agriculture, Industry, and Services\", x = \"Value\", y = \"Density\")+\n    gssthemes()"
  },
  {
    "objectID": "graphics-guide.html#histogram",
    "href": "graphics-guide.html#histogram",
    "title": "Data Visualization Guidelines",
    "section": "Histogram",
    "text": "Histogram\nLike a density chart, a histogram is a graphical representation of the distribution of a dataset. It is an estimate of the probability distribution of a continuous variable (quantitative variable) or a discrete variable in certain cases. To construct a histogram, the data is divided into a set of intervals, also known as bins or buckets, and the number of data points falling into each bin is represented by the height of a bar. The bins are usually specified as consecutive, non-overlapping intervals of a variable.\n\n\nShow the code\ndensitydf_long %>%\n    ggplot(aes(x = value, fill = sector)) +\n  geom_histogram(alpha = 0.5) +\n  scale_fill_manual(values = c(industry = industry_color,\n                                                         agriculture = agric_color,\n                                                         services = services_color)) +\n  labs(title = \"Density Plot for Agriculture, Industry, and Services\", \n         x = \"Value\",\n         y = \"Count\")+\n    gssthemes()\n\n\n\n\n\n\nHistograms (dodged)\nInstead of having the bars of the histogram stack you can also choose to have them next to each other.\n\n\nShow the code\ndensitydf_long %>%\n    ggplot(aes(x = value, fill = sector)) +\n  geom_histogram(position = \"dodge\") +\n  scale_fill_manual(values = c(industry = industry_color,\n                                                         agriculture = agric_color,\n                                                         services = services_color)) +\n  labs(title = \"Density Plot for Agriculture, Industry, and Services\", \n         x = \"Value\",\n         y = \"Count\")+\n    gssthemes() +\n    theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "graphics-guide.html#box-plot",
    "href": "graphics-guide.html#box-plot",
    "title": "Data Visualization Guidelines",
    "section": "Box plot",
    "text": "Box plot\nBoxplots can be used to display the distribution of a numerical data. They are particularly useful for summarizing the spread and skewness of a distribution, as well as identifying outliers. The box in the plot represents the interquartile range (IQR), which spans from the first quartile (Q1) to the third quartile (Q3) of the data. The median is represented by a horizontal line inside the box. To make a boxplot, you can use the geom_boxplot() function.\n\n\nShow the code\ndensitydf_long %>%\n    ggplot(aes(x = sector, y = value, fill = sector)) +\n  geom_boxplot() +\n  scale_fill_manual(values = c(industry = industry_color,\n                                                         agriculture = agric_color,\n                                                         services = services_color)) +\n  labs(title = \"Boxplot for income in Agriculture, Industry, and Services\", \n         x = NULL,\n         y = \"Income\")+\n    gssthemes() +\n    theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "graphics-guide.html#heatmap",
    "href": "graphics-guide.html#heatmap",
    "title": "Data Visualization Guidelines",
    "section": "Heatmap",
    "text": "Heatmap\nHeatmap is a graphical representation of data that uses colour-coded cells to represent values. Heatmaps are commonly used to visualize the distribution and density of data points within a particular area or to show patterns and correlations in large datasets.\nIn a heatmap, each cell represents a specific data point or group of data points, and the colour of the cell indicates the value of the data. Heatmaps can be used to visualize changes in data over time, display geographic data, such as population density or weather patterns, highlight outliers or anomalies in a dataset, which may indicate errors or unusual pattern among others\n\n\nShow the code\n# Sample data : Changes in data overtime\nheatmap_df <- tibble(\n    Sector = c(\n        \"Agriculture\",\n        \"Manufacturing\",\n        \"Trade\",\n        \"Transport\",\n        \"Services\"\n    ),\n    Q1 = c(3, 4, 5, 6, 7),\n    Q2 = c(4, 5, 6, 7, 8),\n    Q3 = c(5, 6, 7, 8, 9),\n    Q4 = c(6, 7, 8, 9, 10)\n) %>%\n    pivot_longer(cols = -Sector,\n                             names_to = \"Quarter\")\n\nheatmap_df %>%\n    kable() %>%\n    kable_styling() %>%\n    scroll_box(height = \"400px\")\n\n\n\n\n \n  \n    Sector \n    Quarter \n    value \n  \n \n\n  \n    Agriculture \n    Q1 \n    3 \n  \n  \n    Agriculture \n    Q2 \n    4 \n  \n  \n    Agriculture \n    Q3 \n    5 \n  \n  \n    Agriculture \n    Q4 \n    6 \n  \n  \n    Manufacturing \n    Q1 \n    4 \n  \n  \n    Manufacturing \n    Q2 \n    5 \n  \n  \n    Manufacturing \n    Q3 \n    6 \n  \n  \n    Manufacturing \n    Q4 \n    7 \n  \n  \n    Trade \n    Q1 \n    5 \n  \n  \n    Trade \n    Q2 \n    6 \n  \n  \n    Trade \n    Q3 \n    7 \n  \n  \n    Trade \n    Q4 \n    8 \n  \n  \n    Transport \n    Q1 \n    6 \n  \n  \n    Transport \n    Q2 \n    7 \n  \n  \n    Transport \n    Q3 \n    8 \n  \n  \n    Transport \n    Q4 \n    9 \n  \n  \n    Services \n    Q1 \n    7 \n  \n  \n    Services \n    Q2 \n    8 \n  \n  \n    Services \n    Q3 \n    9 \n  \n  \n    Services \n    Q4 \n    10 \n  \n\n\n\n\n\n\n\nShow the code\n# create heatmap using ggplot\nheatmap_df %>% \n    ggplot(aes(x = Quarter, y = Sector, fill = value)) +\n  geom_tile() +\n  scale_fill_gradientn(colours = incidence_color_scheme) +\n  theme_minimal() +\n  labs(title = \"Economic Activity by Sector\", x = \"Quarter\", y = \"Sector\", fill = \"Value\") + \n    gssthemes()+\n    theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "graphics-guide.html#pie-charts",
    "href": "graphics-guide.html#pie-charts",
    "title": "Data Visualization Guidelines",
    "section": "Pie charts",
    "text": "Pie charts\nA pie chart is a circular statistical picture that divides into slices to represent numerical quantities. Each pie slice symbolizes a certain category, and the size of each slice is inversely proportionate to the amount it represents. Pie charts are used to show how several categories are spread within a whole.\nPie charts are the most effective for comparing parts of an entire. They do not show changes over time or relationships between variables. When there are many categories or not many differences between the groupings, pie charts might be difficult to read and comprehend.\n\nexample data (Pie chart with 2 categories)\n\n\nShow the code\n# Sample data\ndf_pie <- data.frame(locality = c(\"Urban\", \"Rural\"),\n  deaths = c(4500, 2100))\n\n\ndf_pie %>% \n    kable() %>%\n    kable_styling()\n\n\n\n\n \n  \n    locality \n    deaths \n  \n \n\n  \n    Urban \n    4500 \n  \n  \n    Rural \n    2100 \n  \n\n\n\n\n\n\n\nShow the code\n# Pie chart\ndf_pie %>% \n    ggplot() +\n  geom_col(aes(x = \"\", y = deaths, fill = locality)) +\n  coord_polar(theta = \"y\")+\n    scale_fill_manual(values = c(\"Urban\" = urban_color, \"Rural\"=  rural_color)) +\n    gssthemes() +\n    theme(axis.text = element_blank(),\n                axis.ticks.y = element_blank(),\n                axis.text.y= element_blank(),\n                panel.grid.major.y = element_blank(),\n                axis.text.x = element_blank(),\n                panel.grid = element_blank()) +\n    labs(x = NULL, y = NULL, fill = \"Locality\")\n\n\n\n\n\n\n\nPie chart with percentage value labels showing\n\n\nShow the code\ndf_pie %>% \n    ggplot(aes(x = \"\",\n                         y = deaths, \n                         fill = locality)) +\n  geom_col() +\n    coord_polar(theta = 'y') +\n    scale_fill_manual(values = c(\"Urban\" = urban_color, \"Rural\"=  rural_color)) +\n    geom_text(aes(label = percent(deaths/sum(deaths, na.rm = T))),\n                     color = \"white\", size = 8, position = position_stack(vjust = 0.5)) +\n    gssthemes() +\n    theme(axis.text = element_blank(),\n                axis.ticks.y = element_blank(),\n                axis.text.y= element_blank(),\n                panel.grid.major.y = element_blank(),\n                axis.text.x = element_blank(),\n                panel.grid = element_blank())  +\n    labs(x = NULL, y = NULL)\n\n\n\n\n\n\n\nPie chart with group labels showing on slice and with no legend\n\n\nShow the code\ndf_pie %>% \n    ggplot(aes(x = \"\", y = deaths, fill = locality))+\n    geom_col() +\n    coord_polar(theta = 'y') +\n    geom_text(aes(label = locality, \n                                color = \"black\"), \n                        size = 8,\n                        position = position_stack(vjust = 0.5),\n                        vjust = -1.5) +\n    scale_fill_manual(values = c(\"Urban\" = urban_color, \"Rural\"=  rural_color)) +\n    geom_text(aes(label = percent(deaths/sum(deaths, na.rm = T))),\n                     color = \"white\", size = 8, position = position_stack(vjust = 0.5)) +\n    gssthemes() +\n    theme(axis.text = element_blank(),\n                axis.ticks.y = element_blank(),\n                axis.text.y= element_blank(),\n                panel.grid.major.y = element_blank(),\n                axis.text.x = element_blank(),\n                panel.grid = element_blank(),\n                legend.position = \"none\")  +\n    labs(x = NULL, y = NULL)\n\n\n\n\n\n\n\n\n\n\n\nShow the code\n# # Sample data\n# df <- data.frame(\n#   group = c(\"A\", \"B\", \"C\", \"D\"),\n#   value = c(40, 10, 15, 35)\n# )\n# \n# # Donut chart\n# ggplot(df) +\n#   geom_col(aes(x = \"\", y = value, fill = group)) +\n#   coord_polar(theta = \"y\") +\n#   theme_void() +\n#   xlim(-1.5, 1.5) +\n#   annotation_custom(grob = grid::rectGrob(gp = grid::gpar(col = NA, fill = \"white\")), xmin = -1, xmax = 1, ymin = -1, ymax = 1)+\n#   gssthemes()"
  },
  {
    "objectID": "graphics-guide.html#waffle-chart",
    "href": "graphics-guide.html#waffle-chart",
    "title": "Data Visualization Guidelines",
    "section": "Waffle chart",
    "text": "Waffle chart\nA waffle chart, also known as a square pie chart or a mosaic plot, is a type of chart that displays parts of a whole for categorical quantities. It is similar to a pie chart but uses squares instead of wedges to represent the proportions. Each square in the chart represents a fixed quantity and the total number of squares represents the total quantity.\nWaffle charts are used in similar situations as pie charts, to show the relative proportions of different categories within a whole. They can be useful when you want to compare parts of a whole or when you want to display multiple pie charts with the same scale in a small space. Waffle charts can also be easier to read and interpret than pie charts when there are many categories or if the differences between the categories are small. To make a waffle chart in R, you can use the waffle() function from the waffle package. This package works woth named vectors, so to use it you need to transform your tibble to a named vector.\n\nexample data (waffle chart)\n\n\nShow the code\ndata_waffle_chart <- tribble(~Type ,~ Food, ~ number,\n                                                        \"Starch\",  \"Fufu\",   52,\n                                                        \"Starch\", \"Banku\",  18,\n                                                        \"Starch\",  \"Rice\",  10,\n                                                        \"Fish\", \"Tilapia\", 6,\n                                                        \"vegetables\", \"Tomato\" , 2,\n                                                        \"vegetables\", \"Okra\" , 2) \ndata_waffle_chart %>% \n    kable() %>%\n    kable_styling() \n\n\n\n\n \n  \n    Type \n    Food \n    number \n  \n \n\n  \n    Starch \n    Fufu \n    52 \n  \n  \n    Starch \n    Banku \n    18 \n  \n  \n    Starch \n    Rice \n    10 \n  \n  \n    Fish \n    Tilapia \n    6 \n  \n  \n    vegetables \n    Tomato \n    2 \n  \n  \n    vegetables \n    Okra \n    2 \n  \n\n\n\n\n\n\n\nShow the code\nlibrary(waffle)\n\nvect_waffle_chart <- data_waffle_chart %>% pull(number)\nnames(vect_waffle_chart) <- data_waffle_chart %>% pull(Food)\n\nwaffle(vect_waffle_chart) + \n    gssthemes() + \n    theme(axis.text.x = element_blank(),\n                axis.text.y = element_blank(),\n                axis.ticks = element_blank(),\n                legend.position = \"bottom\") +\n    scale_fill_manual(values = neutral_color_scheme)+\n    labs(fill = NULL)"
  },
  {
    "objectID": "graphics-guide.html#treemap",
    "href": "graphics-guide.html#treemap",
    "title": "Data Visualization Guidelines",
    "section": "Treemap",
    "text": "Treemap\nA treemap is used when you want to visualize hierarchical data or display the composition of a whole using nested rectangles. It is particularly useful for representing large amounts of data with varying proportions in a compact and space-efficient manner. Each rectangle within the treemap represents a category or sub-category, with the size of the rectangle corresponding to the value or magnitude of that specific category. To make a treemap chart in R, you can use the geom_treemap() function from the treemapify package.\n\n\nShow the code\nlibrary(treemapify)\n\ndata_waffle_chart %>% \n    ggplot(aes(area = number, fill = Type, label = Food, subgroup = Type)) +\n    geom_treemap(colour = \"white\") +\n    geom_treemap_text(grow = T, reflow = T, colour = \"white\",  family = GSS_font) +\n    geom_treemap_subgroup_border( colour = \"white\") +\n    scale_fill_brewer(palette = \"Set1\") + \n    gssthemes() + \n    theme(axis.text.x = element_blank(),\n                axis.text.y = element_blank(),\n                legend.position = \"bottom\") +\n    scale_fill_manual(values = neutral_color_scheme[c(1,5, 3)])+\n    labs(fill = \"type of food\")"
  },
  {
    "objectID": "graphics-guide.html#dumbell-chart",
    "href": "graphics-guide.html#dumbell-chart",
    "title": "Data Visualization Guidelines",
    "section": "Dumbell chart",
    "text": "Dumbell chart\nalso known as connected dot plot, it shows the changes in a variable between two different conditions or points in time. It is frequently employed to contrast two connected variables across various categories. Each dot on the graph, which is made up of two dots connected by a line or bar, reflects the value of one of the variables for a certain category.\nDumbbell charts are helpful for comparing the range of a variable across various groups or for displaying change over time for multiple groups. To make a waffle chart in R, you can use the geom_dumbell() function from the ggalt package.\n\n\nShow the code\nlibrary(ggalt)\n\nn_chopbars_df %>%\n    ggplot() +\n    geom_dumbbell(aes(y = region, x = rural, xend = urban),\n        size = 1,\n        color = national_color,\n        size_xend = 5,\n        size_x = 5,\n        colour_x = rural_color,\n        colour_xend = urban_color,\n        dot_guide = FALSE,\n        dot_guide_size = 0.25,\n        show.legend = TRUE\n    ) +\n    labs(x = NULL, y = NULL)+\n    gssthemes()  +\n    geom_point(data = tibble(x = NA_integer_, y= NA_integer_, fill = c(\"urban\", \"rural\")),\n                         mapping = aes(x =x, y = y, color =fill)) +\n    scale_color_manual(name = \"\", values = c(\"urban\" = urban_color,\n                                                                                        \"rural\" = rural_color) )  +\n    theme(legend.key = element_rect(fill = NA),\n                legend.position = \"bottom\")+\n    guides(colour = guide_legend(override.aes = list(size=5)))"
  },
  {
    "objectID": "graphics-guide.html#sankey-chart",
    "href": "graphics-guide.html#sankey-chart",
    "title": "Data Visualization Guidelines",
    "section": "Sankey Chart",
    "text": "Sankey Chart\nA Sankey chart (also known as a Sankey diagram) is a specific type of flow diagram, where the width of the bands is proportional to the flow quantity. This makes Sankey charts useful for visualizing a flow or transfer of some quantity between different time point. To make a Sankey chart in ggplot, you can use the ggsankey library.\n\n\nShow the code\nlibrary(ggsankey)\n\nsankey_df <- tribble(~Q1, ~Q2, ~Q3,\n                     \"Labour force\", \"Labour force\", \"Labour force\",\n                     \"Labour force\", \"Labour force\", \"Outside Labour force\",\n                     \"Labour force\", \"Outside Labour force\", \"Labour force\",\n                     \"Outside Labour force\", \"Outside Labour force\", \"Outside Labour force\",\n                     \"Outside Labour force\", \"Outside Labour force\", \"Labour force\") %>%\n  make_long(Q1, Q2, Q3)\n\nsankey_df %>% \n    kable() %>%\n    kable_styling() \n\n\n\n\n \n  \n    x \n    node \n    next_x \n    next_node \n  \n \n\n  \n    Q1 \n    Labour force \n    Q2 \n    Labour force \n  \n  \n    Q2 \n    Labour force \n    Q3 \n    Labour force \n  \n  \n    Q3 \n    Labour force \n    NA \n    NA \n  \n  \n    Q1 \n    Labour force \n    Q2 \n    Labour force \n  \n  \n    Q2 \n    Labour force \n    Q3 \n    Outside Labour force \n  \n  \n    Q3 \n    Outside Labour force \n    NA \n    NA \n  \n  \n    Q1 \n    Labour force \n    Q2 \n    Outside Labour force \n  \n  \n    Q2 \n    Outside Labour force \n    Q3 \n    Labour force \n  \n  \n    Q3 \n    Labour force \n    NA \n    NA \n  \n  \n    Q1 \n    Outside Labour force \n    Q2 \n    Outside Labour force \n  \n  \n    Q2 \n    Outside Labour force \n    Q3 \n    Outside Labour force \n  \n  \n    Q3 \n    Outside Labour force \n    NA \n    NA \n  \n  \n    Q1 \n    Outside Labour force \n    Q2 \n    Outside Labour force \n  \n  \n    Q2 \n    Outside Labour force \n    Q3 \n    Labour force \n  \n  \n    Q3 \n    Labour force \n    NA \n    NA \n  \n\n\n\n\n\n\n\nShow the code\nggplot(\n    sankey_df,\n    aes(\n        x = x,\n        next_x = next_x,\n        node = node,\n        next_node = next_node,\n        fill = factor(node),\n        label = node\n    )\n) +\n    geom_sankey(flow.alpha = 0.5,\n                            node.color = 1,\n                            show.legend = FALSE) +\n    geom_sankey_label(\n        size = 3.5,\n        color = 1,\n        fill = \"white\",\n        family = \"century gothic bold\"\n    ) +\n    scale_fill_manual(\n        values = c(\"Outside Labour force\" = negative_color, \"Labour force\" = positive_color),\n        labels =  c(\"Outside Labour force\" = \"Outside Labour force\", \"Labour force\" =\n                                    \"Labour force\")\n    ) +\n    scale_x_discrete(position = \"top\") +\n    gssthemes() +\n    theme(\n        panel.grid.major.y = element_blank(),\n        panel.grid.minor.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.title.x = element_blank()\n    )"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome",
    "section": "",
    "text": "You are currently on the Ghana Statistical Service brand guide and data visualization website! We are thrilled to have you here and hope that you will find our platform to be both informative and engaging.\nThis site contains:\n\nThe Ghana Statistical Service Report writing guide\nR data Visualisation guide using the GSS theme"
  }
]