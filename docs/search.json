[
  {
    "objectID": "graphics-guide.html",
    "href": "graphics-guide.html",
    "title": "R visualization",
    "section": "",
    "text": "R is an amazing tool for data analysis and visualization. The code on this page shows the a variety of plots using the R ggplot2 package to display statistical outputs. All the data shown on the page is fictitious and only meant for illustrative purposes."
  },
  {
    "objectID": "graphics-guide.html#use-of-fonts",
    "href": "graphics-guide.html#use-of-fonts",
    "title": "R visualization",
    "section": "Use of Fonts",
    "text": "Use of Fonts\n\nCentury Gothic Bold, font size 12 should be used for the labels and values on the graph."
  },
  {
    "objectID": "graphics-guide.html#general-rules",
    "href": "graphics-guide.html#general-rules",
    "title": "R visualization",
    "section": "General Rules",
    "text": "General Rules\n\nAll axes should be labelled and where possible, the values for data points should be indicated on the graph.\nPrevent use of grid lines whenever possible to not clutter plots\nUse line breaks in long labels\nBe conscious about the way axis are ordered. For example, order regions either from the lowest to the highest value or using the serpentine order.\nlabel axis appropiately"
  },
  {
    "objectID": "graphics-guide.html#use-of-colours",
    "href": "graphics-guide.html#use-of-colours",
    "title": "R visualization",
    "section": "Use of Colours",
    "text": "Use of Colours\nPlease use the following colour schemes for different types of disaggregation.\n\nSex\n\n                    \n                    Male\n                        \n                            Hex: #206095 rgb(32, 96, 149).\n                        \n                    \n                    \n                        Female\n                        \n                            Hex: #F66068 rgb(246, 96,104).\n                        \n                    \n                \n    \n    \n    \n\n\nLocality Type\n\n                    \n                         National  \n                        \n                         #27A0CC .\n                        \n                    \n                    \n                        Urban\n                        \n                            #871A5B .\n                        \n                    \n                            \n                                Rural\n                        \n                            \n                            #22D0B6 .\n                        \n                    \n                \n    \n    \n    \n\n\n\nNeutral\nNeutral is used on general variables. It is advise that the maximum number of variables per plot should not be more than 5.\n\n\n                    \n                        \n                            #002060\n                        \n                    \n                    \n                        \n                            #0070C0\n                        \n                    \n                    \n                        \n                            #00B0F0\n                        \n                    \n                    \n                        \n                            #8EA9DB\n                        \n                    \n                    \n                        \n                            #9BC2E6\n                        \n                    \n                    \n                        \n                            #FFFFCC\n                        \n                    \n                    \n    \n    \n    \n    \n\n\n\nPositive ~ Negative\n\n\n                    \n                        \n                            #6AA84F\n                        \n                    \n                    \n                        \n                            #93C47D\n                        \n                    \n                    \n                        \n                            #FFFFCC\n                        \n                    \n                    \n                        \n                            #F4CCCC\n                        \n                    \n                    \n                        \n                            #E06666\n                        \n                    \n                    \n    \n    \n    \n    \n\n\n\nPopulation & Density\n\n\n                    \n                        \n                            #FFFFCC\n                        \n                    \n                    \n                        \n                            #C7E9B4\n                        \n                    \n                    \n                        \n                            #7FCDBB\n                        \n                    \n                    \n                        \n                            #41B6C4\n                        \n                    \n                    \n                        \n                            #2C7FB8\n                        \n                    \n                    \n    \n    \n    \n    \n\n\n\nIncidence\n\n\n                    \n                        \n                            #FECCCC\n                        \n                    \n                    \n     \n                        \n                            #FF9999\n                        \n                    \n                    \n     \n                        \n                            #FF6666\n                        \n                    \n                   \n     \n                        \n                            #FF3333\n                        \n                    \n                   \n     \n                        \n                            #CC0000\n                        \n                    \n     \n     \n                        \n                            #990000\n                        \n                    \n                    \n    \n    \n    \n    \n\n\n\nFood / Non-food\n\n                    \n                    Food\n                        \n                            #3ECDB9 \n                        \n                    \n                    \n                        Non-food\n                        \n                            #04BCFC"
  },
  {
    "objectID": "graphics-guide.html#bar-charts",
    "href": "graphics-guide.html#bar-charts",
    "title": "R visualization",
    "section": "Bar charts",
    "text": "Bar charts\nA bar chart is an effective way to visually represent data that is categorical or discrete in nature for example different regions in Ghana). It is particularly useful when comparing values across different categories or groups. Bar charts are ideal for showing the distribution or frequency of data, as well as identifying trends or patterns over time. They can be used to display numerical data such as quantities, percentages, and proportions. Overall, a bar chart is appropriate when you want to easily compare different categories or groups and understand the relative differences between them.\n\nexample data\n\n\nShow the code\nn_chopbars_df  <- tribble(~region_number, ~region, ~number_of_chop_bars, ~urban, ~rural,\n                            1,\"Western\", 567, 300, 267,\n                            2, \"Central\", 907, 600, 307,\n                            3, \"Greater Accra\", 6990, 4792, 2198, \n                            4, \"Volta\", 278, 78, 200, \n                            5, \"Eastern\", 787, 287, 500,\n                            6, \"Ashanti\",5621, 621, 5000,\n                            7, \"Western North\", 345, 145, 200,\n                            8,  \"Ahafo\", 678, 339, 339,\n                            9, \"Bono\",1268, 600, 668, \n                            10,\"Bono East\", 1268,1048, 220,\n                            11,\"Oti\",773, 500, 273, \n                            12,\"Northern\", 112, 12, 100,\n                            13,\"Savannah\", 1289,503, 786, \n                            14,\"North East\",378, 142, 236,\n                            15,\"Upper East\",1279,326, 953, \n                            16, \"Upper West\", 3782, 3456, 326) \n\nn_chopbars_df %>%\n    kable() %>%\n    kable_styling() %>% \n  scroll_box(height = \"400px\")\n\n\n\n\n \n  \n    region_number \n    region \n    number_of_chop_bars \n    urban \n    rural \n  \n \n\n  \n    1 \n    Western \n    567 \n    300 \n    267 \n  \n  \n    2 \n    Central \n    907 \n    600 \n    307 \n  \n  \n    3 \n    Greater Accra \n    6990 \n    4792 \n    2198 \n  \n  \n    4 \n    Volta \n    278 \n    78 \n    200 \n  \n  \n    5 \n    Eastern \n    787 \n    287 \n    500 \n  \n  \n    6 \n    Ashanti \n    5621 \n    621 \n    5000 \n  \n  \n    7 \n    Western North \n    345 \n    145 \n    200 \n  \n  \n    8 \n    Ahafo \n    678 \n    339 \n    339 \n  \n  \n    9 \n    Bono \n    1268 \n    600 \n    668 \n  \n  \n    10 \n    Bono East \n    1268 \n    1048 \n    220 \n  \n  \n    11 \n    Oti \n    773 \n    500 \n    273 \n  \n  \n    12 \n    Northern \n    112 \n    12 \n    100 \n  \n  \n    13 \n    Savannah \n    1289 \n    503 \n    786 \n  \n  \n    14 \n    North East \n    378 \n    142 \n    236 \n  \n  \n    15 \n    Upper East \n    1279 \n    326 \n    953 \n  \n  \n    16 \n    Upper West \n    3782 \n    3456 \n    326 \n  \n\n\n\n\n\n\n\nOne Color\n\n\nShow the code\n# Pipe operator to pass data frame to the next line\nn_chopbars_df %>% \n  # Create a ggplot object and set the aesthetic mappings\n  ggplot(mapping = aes(x = region, y = number_of_chop_bars)) +\n  # Add a column chart with bars of equal width\n  geom_col(width = 0.8) +\n  # Apply a custom theme to the plot\n  gssthemes() +\n# The expand argument controls whether the range of the y-axis is expanded to include a small margin around the data. The limits argument sets the upper and lower limits of the y-axis to nicelimits, which is a function that makes sure the limits are always above the largest data point. he breaks argument sets the tick marks on the y-axis to use extended_breaks from the scales package, which generates a sequence of evenly spaced values with loose spacing.\n  scale_y_continuous( expand = c( 0, 1 ),\n                      limits = nicelimits,\n                                        labels = scales::comma,\n                      breaks = scales::extended_breaks(only.loose = TRUE)) +\n    # Set the scale for the x-axis with tick labels rotated by 90 degrees\n  scale_x_discrete(guide = guide_axis(angle = 90)) +\n     # Add axis labels to the plot\n    labs(x = NULL,\n             y = \"number of chop bars\")+\n    # Set the coordinate system for the plot, allowing data points to be partially displayed outside of the plot area.\n  coord_cartesian(clip = \"off\")\n\n\n\n\n\n\n\nOne Color (Rotated) with labels\nThis example introduces coord_flip() instead of coord_cartesian() and bring back some theme elements to draw vertical instead of horizontal grid lines.\n\n\nShow the code\n# Pipe operator to pass data frame to the next line\nn_chopbars_df %>% \n  # Create a ggplot object and set the aesthetic mappings\n  ggplot(mapping = aes(x = region, y = number_of_chop_bars)) +\n  # Add a column chart with bars of equal width\n  geom_col(width = 0.8) +\n    # add text to the end of the plot\n     geom_text(mapping = aes(label = number_of_chop_bars), hjust = 1) +\n  # Apply a custom theme to the plot\n  gssthemes() +\n    # The expand argument controls whether the range of the y-axis is expanded to include a small margin around the data. \n    # The limits argument sets the upper and lower limits of the y-axis to nicelimits, which is a function that makes sure \n    # the limits are always above the largest data point. he breaks argument sets the tick marks on the y-axis to use\n    # extended_breaks from the scales package, which generates a sequence of evenly spaced values with loose spacing.\n  scale_y_continuous( expand = c( 0, 1 ),\n                      limits = nicelimits,\n                                        labels = scales::comma,\n                      breaks = scales::extended_breaks(only.loose = TRUE)) +\n    # Add axis labels to the plot\n    labs(x = NULL,\n             y = \"number of chop bars\")+\n    # Set the coordinate system for the plot, allowing data points to be partially displayed outside of the plot area.\n  coord_flip(clip = \"off\") +\n    # change the theme a bit so that 1) the axis lines are vertical and 2) the labels are right alligend\n    theme(panel.grid.major.x=element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y=element_blank(),\n                axis.text.x = element_text(vjust = 0.5))\n\n\n\n\n\n\n\nOne Color (Rotated) with labels and ordered\nYou can use the reorder() function to order the axis labels.\n\n\nShow the code\n# Pipe operator to pass data frame to the next line\nn_chopbars_df %>% \n  # Create a ggplot object and set the aesthetic mappings\n    # use the reorder function to reorder the the bars\n  ggplot(mapping = aes(x = reorder(region,number_of_chop_bars), y = number_of_chop_bars)) +\n  # Add a column chart with bars of equal width\n  geom_col(width = 0.8) +\n    # add text to the end of the plot, and comma at all thousands\n     geom_text(mapping = aes(label = scales::comma(number_of_chop_bars)), hjust = 1,) +\n  # Apply a custom theme to the plot\n  gssthemes() +\n    # The expand argument controls whether the range of the y-axis is expanded to include a small margin around the data. \n    # The limits argument sets the upper and lower limits of the y-axis to nicelimits, which is a function that makes sure \n    # the limits are always above the largest data point. he breaks argument sets the tick marks on the y-axis to use\n    # extended_breaks from the scales package, which generates a sequence of evenly spaced values with loose spacing.\n  scale_y_continuous( expand = c( 0, 1 ),\n                      limits = nicelimits,\n                                        labels = scales::comma,\n                      breaks = scales::extended_breaks(only.loose = TRUE)) +\n    # Add axis labels to the plot\n    labs(x = NULL,\n             y = \"number of chop bars\")+\n    # Set the coordinate system for the plot, allowing data points to be partially displayed outside of the plot area.\n  coord_flip(clip = \"off\") +\n    # change the theme a bit so that 1) the axis lines are vertical and 2) the labels are right alligend\n    theme(panel.grid.major.x=element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y=element_blank(),\n                axis.text.x = element_text(vjust = 0.5))\n\n\n\n\n\n\n\nShow different categories using color palettes (stacked)\nIf you want to show different categories, you can use the fill = categorical variable argument inside the aesthetics mapping. To do this, the data needs to be in a long format\n\nexample data (long format)\n\n\nShow the code\nn_chopbars_df_longformat <- n_chopbars_df %>% \n    select(-number_of_chop_bars ) %>% \n    pivot_longer(-c(region_number, region), names_to = \"locality\", values_to = \"number_of_chop_bars\")\n\nn_chopbars_df_longformat %>%\n    kable() %>%\n    kable_styling() %>% \n  scroll_box(height = \"400px\")\n\n\n\n\n \n  \n    region_number \n    region \n    locality \n    number_of_chop_bars \n  \n \n\n  \n    1 \n    Western \n    urban \n    300 \n  \n  \n    1 \n    Western \n    rural \n    267 \n  \n  \n    2 \n    Central \n    urban \n    600 \n  \n  \n    2 \n    Central \n    rural \n    307 \n  \n  \n    3 \n    Greater Accra \n    urban \n    4792 \n  \n  \n    3 \n    Greater Accra \n    rural \n    2198 \n  \n  \n    4 \n    Volta \n    urban \n    78 \n  \n  \n    4 \n    Volta \n    rural \n    200 \n  \n  \n    5 \n    Eastern \n    urban \n    287 \n  \n  \n    5 \n    Eastern \n    rural \n    500 \n  \n  \n    6 \n    Ashanti \n    urban \n    621 \n  \n  \n    6 \n    Ashanti \n    rural \n    5000 \n  \n  \n    7 \n    Western North \n    urban \n    145 \n  \n  \n    7 \n    Western North \n    rural \n    200 \n  \n  \n    8 \n    Ahafo \n    urban \n    339 \n  \n  \n    8 \n    Ahafo \n    rural \n    339 \n  \n  \n    9 \n    Bono \n    urban \n    600 \n  \n  \n    9 \n    Bono \n    rural \n    668 \n  \n  \n    10 \n    Bono East \n    urban \n    1048 \n  \n  \n    10 \n    Bono East \n    rural \n    220 \n  \n  \n    11 \n    Oti \n    urban \n    500 \n  \n  \n    11 \n    Oti \n    rural \n    273 \n  \n  \n    12 \n    Northern \n    urban \n    12 \n  \n  \n    12 \n    Northern \n    rural \n    100 \n  \n  \n    13 \n    Savannah \n    urban \n    503 \n  \n  \n    13 \n    Savannah \n    rural \n    786 \n  \n  \n    14 \n    North East \n    urban \n    142 \n  \n  \n    14 \n    North East \n    rural \n    236 \n  \n  \n    15 \n    Upper East \n    urban \n    326 \n  \n  \n    15 \n    Upper East \n    rural \n    953 \n  \n  \n    16 \n    Upper West \n    urban \n    3456 \n  \n  \n    16 \n    Upper West \n    rural \n    326 \n  \n\n\n\n\n\n\n\nShow the code\nn_chopbars_df_longformat %>% \n  ggplot(mapping = aes(x = reorder(region,number_of_chop_bars), fill = locality ,  y = number_of_chop_bars)) +\n  geom_col(width = 0.8) +\n  gssthemes() +\n  scale_y_continuous( expand = c( 0, 1 ),\n                      limits = nicelimits,\n                                        labels = scales::comma,\n                      breaks = scales::extended_breaks(only.loose = TRUE)) +\n    labs(x = NULL,\n             y = \"number of chop bars\")+\n  coord_flip(clip = \"off\") +\n    scale_fill_manual(values = c(urban = urban_color,\n                                                             rural = rural_color))+\n    theme(panel.grid.major.x=element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y=element_blank(),\n                axis.text.x = element_text(vjust = 0.5))\n\n\n\n\n\n\n\n\nShow different categories using color palettes (dodged)\nInstead of having the categories stacked, you can put them next to each other (stacked)\n\n\nShow the code\nn_chopbars_df_longformat %>% \n  ggplot(mapping = aes(x = reorder(region,number_of_chop_bars), fill = locality ,  y = number_of_chop_bars)) +\n  geom_col(width = 0.8, position = \"dodge\") +\n    geom_text(mapping = aes(label = scales::comma(number_of_chop_bars)), hjust = 1, \n                        position = position_dodge(width = 0.8)) +\n  gssthemes() +\n  scale_y_continuous( expand = c( 0, 0 ),\n                      limits = nicelimits,\n                                        labels = scales::comma,\n                      breaks = scales::extended_breaks(only.loose = TRUE)) +\n    labs(x = NULL,\n             y = \"number of chop bars\")+\n  coord_flip(clip = \"off\") +\n    scale_fill_manual(values = c(urban = urban_color,\n                                                             rural = rural_color))+\n    theme(panel.grid.major.x=element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y=element_blank(),\n                axis.text.x = element_text(vjust = 0.5))\n\n\n\n\n\n\n\nBar chart with highlighted category\nSometimes you might want to highlight a single category in a bar chart (for example the National/Ghana average). To highlight also the axis label you need to use the showtext package. It is recommended to put highlight is a similar hue than the other colours. This can be done, using the muted() function from the scales package\n\n\nShow the code\n# this code add the Ghana average\nn_chopbars_df_with_national <- n_chopbars_df %>% \n    add_row( region_number = 0,\n                         region  = \"Ghana\",\n                         number_of_chop_bars = mean(n_chopbars_df$number_of_chop_bars),\n                         urban = mean(n_chopbars_df$urban ),\n                         rural= mean(n_chopbars_df$rural) )\n\n\n\n\nShow the code\nhighlight = function(x, pat, color=\"black\", family=\"\") {\n    ifelse(grepl(pat, x), glue(\"<b style='font-family:{family}; color:{color}'>{x}</b>\"), x)\n}\n\n# Pipe operator to pass data frame to the next line\nn_chopbars_df_with_national %>% \n    mutate(highlight = region == \"Ghana\") %>% \n  # Create a ggplot object and set the aesthetic mappings\n    # use the reorder function to reorder the the bars\n  ggplot(mapping = aes(x = reorder(region,number_of_chop_bars), \n                                         y = number_of_chop_bars,\n                                          fill = highlight)) +\n  geom_col(width = 0.8) +\n    geom_text(mapping = aes(label = scales::comma(number_of_chop_bars)), hjust = 1) +\n  gssthemes() +\n  scale_y_continuous( expand = c( 0, 0 ),\n                      limits = nicelimits,\n                                        labels = scales::comma,\n                      breaks = scales::extended_breaks(only.loose = TRUE)) +\n    scale_x_discrete(labels= function(x) highlight(x, \"Ghana\", \"black\")) +\n    scale_fill_manual(values = c(`FALSE` = national_color, \n                                                             `TRUE` = scales::muted(national_color)),\n                                        guide = \"none\") +\n    labs(x = NULL,\n             y = \"number of chop bars\" )+\n  coord_flip(clip = \"off\") +\n    theme(panel.grid.major.x = element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y = element_blank(),\n                axis.text.x = element_text(vjust = 0.5),\n                axis.text.y = element_markdown()) # to make this work you need to make the y axis a markdown format\n\n\n\n\n\n\n\nBar chart with long labels\nTo allow for sufficient plotting space, it is a good idea to add line break to long value labels on the axes. You can use the str_wrap() function to add line breaks\n\nexample data (long labels)\n\n\nShow the code\nn_chopbars_df_long_labels  <- tribble(~question, ~count, \n                                                                            \"number of households eating at chopbars every day\", 678,\n                                                                            \"number of male headed households eating at chopbars once a week\", 1267,\n                                                                            \"number of female headed households eating at chop bars once a week\", 1876)\nn_chopbars_df_long_labels %>%\n    kable() %>%\n    kable_styling()\n\n\n\n\n \n  \n    question \n    count \n  \n \n\n  \n    number of households eating at chopbars every day \n    678 \n  \n  \n    number of male headed households eating at chopbars once a week \n    1267 \n  \n  \n    number of female headed households eating at chop bars once a week \n    1876 \n  \n\n\n\n\n\n\n\nShow the code\nn_chopbars_df_long_labels %>% \n  ggplot(mapping = aes(x = str_wrap(question, 20), y = count)) +\n  geom_col(width = 0.8) +\n     geom_text(mapping = aes(label = count), hjust = 1) +\n  gssthemes() +\n  scale_y_continuous( expand = c( 0, 1 ),\n                      limits = nicelimits,\n                                        labels = scales::comma,\n                      breaks = scales::extended_breaks(only.loose = TRUE)) +\n    labs(x = NULL,\n             y = \"number of chop bars\")+\n  coord_flip(clip = \"off\") +\n    theme(panel.grid.major.x=element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y=element_blank())\n\n\n\n\n\n\n\n\nDiverging Bar chart\nA diverging bar chart is a type of data visualization that displays values of a quantitative variable across two or more categories, where the bars are centered on a common baseline or a central axis. This type of chart is particularly useful for comparing differences in values that can have both positive and negative magnitudes, or when illustrating a relationship between two opposing factors or sentiments.\nIn a diverging bar chart, the bars extend in opposite directions from the central axis, creating a symmetrical pattern. This layout makes it easy to see the differences between categories and to identify patterns and trends within the data.\nWhen choosing a diverging bar chart, make sure it is appropriate for your dataset and the type of information you want to convey. It is important to note that diverging bar charts may not be suitable for all types of data, especially if the differences between categories are not symmetrical or if the data has no clear central point. In such cases, other visualization methods, like standard bar charts or line charts, might be more suitable.\n\nexample data (positive and negative values)\n\n\nShow the code\nchange_in_chop_bars_df <- tribble(~region_number, ~region, ~change,\n                            1,\"Western\", -.35, \n                            2, \"Central\", -.26, \n                            3, \"Greater Accra\", .67,\n                            4, \"Volta\", -.18, \n                            5, \"Eastern\", .47, \n                            6, \"Ashanti\",.56, \n                            7, \"Western North\", -.2,\n                            8,  \"Ahafo\", .61, \n                            9, \"Bono\",.12,\n                            10,\"Bono East\", 0.01,\n                            11,\"Oti\",.07,\n                            12,\"Northern\", .11,\n                            13,\"Savannah\", .12,\n                            14,\"North East\",-.31,\n                            15,\"Upper East\",0,\n                            16, \"Upper West\", .265)\n\nchange_in_chop_bars_df %>% \n    kable() %>%\n    kable_styling() %>% \n  scroll_box(height = \"400px\")\n\n\n\n\n \n  \n    region_number \n    region \n    change \n  \n \n\n  \n    1 \n    Western \n    -0.350 \n  \n  \n    2 \n    Central \n    -0.260 \n  \n  \n    3 \n    Greater Accra \n    0.670 \n  \n  \n    4 \n    Volta \n    -0.180 \n  \n  \n    5 \n    Eastern \n    0.470 \n  \n  \n    6 \n    Ashanti \n    0.560 \n  \n  \n    7 \n    Western North \n    -0.200 \n  \n  \n    8 \n    Ahafo \n    0.610 \n  \n  \n    9 \n    Bono \n    0.120 \n  \n  \n    10 \n    Bono East \n    0.010 \n  \n  \n    11 \n    Oti \n    0.070 \n  \n  \n    12 \n    Northern \n    0.110 \n  \n  \n    13 \n    Savannah \n    0.120 \n  \n  \n    14 \n    North East \n    -0.310 \n  \n  \n    15 \n    Upper East \n    0.000 \n  \n  \n    16 \n    Upper West \n    0.265 \n  \n\n\n\n\n\n\n\nShow the code\nchange_in_chop_bars_df %>% \n    mutate(pos_neg = ifelse(change >0, \"positive\", \"negative\")) %>% \n    ggplot(aes(x = reorder(region, change),\n                         y = change,\n                         fill =pos_neg)) +\n  geom_col() +\n  gssthemes() +\n        scale_fill_manual(values = c(positive = positive_color,\n                                                             negative = negative_color))+ \n  scale_y_continuous(labels = scales::percent) +\n    labs(x = NULL,\n             y = \"change in number\\nof chop bars\")+\n  coord_flip(clip = \"off\") +\n    theme(panel.grid.major.x=element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y=element_blank(),\n                axis.text.x = element_text(vjust = 0.5),\n                legend.position = \"none\") +\n      geom_hline(yintercept = 0, linetype = \"dashed\", color = \"black\")\n\n\n\n\n\n\n\n\nFilled bar chart with from positive to negative\nYou can use a filled bar chart to show relative shares within a group. This example shows the percentage of different opininions.\n\nexample data (sentiment data)\n\n\nShow the code\nsentiment_chop_bars <- tribble(~location, ~ `very positive`, ~ `positive`, ~  `neutral`,  ~ `negative`, ~\"very negative\",\n                \"urban\", 15.2, 17.3, 50.2, 8, 9.3,\n                \"rural\" , 25.2,34.2,31.2,6,3.4,\n                \"national\", 20.2,25.75, 40.7,7,6.35)\n\nsentiment_chop_bars %>% \n        kable() %>%\n    kable_styling() \n\n\n\n\n \n  \n    location \n    very positive \n    positive \n    neutral \n    negative \n    very negative \n  \n \n\n  \n    urban \n    15.2 \n    17.30 \n    50.2 \n    8 \n    9.30 \n  \n  \n    rural \n    25.2 \n    34.20 \n    31.2 \n    6 \n    3.40 \n  \n  \n    national \n    20.2 \n    25.75 \n    40.7 \n    7 \n    6.35 \n  \n\n\n\n\n\n\n\nShow the code\nsentiment_chop_bars %>%\n    pivot_longer(-location, names_to = \"sentiment\") %>%\n    mutate(percent = value / 100) %>%\n    # make sure the sentiment labels are factors so that they can be ordered correctly\n    mutate(sentiment = factor(\n        sentiment,\n        levels = c(\n            \"very positive\",\n            \"positive\",\n            \"neutral\",\n            \"negative\",\n            \"very negative\"\n        )\n    )) %>%\n    ggplot(aes(x = location, y = percent, fill = sentiment)) +\n    geom_col(width = 0.8, position = \"stack\") +\n    gssthemes() +\n    scale_y_continuous(labels = scales::percent,\n                                         expand = c(0, 0)) +\n    labs(x = NULL,\n             y = \"percentage\",\n             fill = \"opinion on chop bars\") +\n    coord_flip(clip = \"off\") +\n    scale_fill_manual(values = posneutralneg_color_scheme) +\n    theme(\n        panel.grid.major.x = element_line(color = \"gray\", size = 0.25),\n        panel.grid.major.y = element_blank(),\n        legend.position = \"top\"\n    ) +\n    guides(fill = guide_legend(\n        nrow = 2,\n        byrow = TRUE,\n        title.position = \"top\"\n    ))\n\n\n\n\n\n\n\n\nmultiple plots next to each other using facet_wrap()\nR’s faceting system is a powerful way to make “small multiples”.\n\n\nShow the code\nn_chopbars_df_longformat %>% \n  ggplot(mapping = aes(x = reorder(region,number_of_chop_bars), fill = locality ,  y = number_of_chop_bars)) +\n  geom_col(width = 0.8, position = \"dodge\") +\n    geom_text(mapping = aes(label = scales::comma(number_of_chop_bars)), hjust = 1, \n                        position = position_dodge(width = 0.8)) +\n\n  gssthemes() +\n  scale_y_continuous( expand =c(0,NA),\n                                        limits = c(0, 7000),\n                                        labels = scales::comma,\n                      breaks = scales::extended_breaks(only.loose = TRUE)) +\n    labs(x = NULL,\n             y = \"number of chop bars\")+\n  coord_flip(clip = \"off\") +\n    scale_fill_manual(values = c(urban = urban_color,\n                                                             rural = rural_color))+\n    theme(panel.grid.major.x=element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y=element_blank(),\n                legend.position = \"none\") +\n    # use the facet_wrap function to make small multiples\n    facet_wrap(~locality)\n\n\n\n\n\n\n\nmultiple plots next to each other with separate bar legends\nSometimes using facet_wrap is not sufficient, especially if you want to add different legends to sub-plots, but still want to align different axis of plots into a single plots. To do this you can create 3 seperate plots and merge them using the patchwork package\n\nexample data (long format with quarters)\n\n\nShow the code\nn_chopbars_df_region_quarters  <- tribble(~region_number, ~region, ~national, ~urban, ~rural, ~quarter,\n1,\"Western\", 567, 300, 267, \"Q1\",\n2, \"Central\", 907, 600, 307,\"Q1\",\n3, \"Greater Accra\", 6990, 4792, 2198, \"Q1\",\n4, \"Volta\", 278, 78, 200, \"Q1\",\n5, \"Eastern\", 787, 287, 500,\"Q1\",\n6, \"Ashanti\",5621, 621, 5000,\"Q1\",\n7, \"Western North\", 345, 145, 200,\"Q1\",\n8,  \"Ahafo\", 678, 339, 339,\"Q1\",\n9, \"Bono\",1268, 600, 668, \"Q1\",\n10,\"Bono East\", 1268,1048, 220,\"Q1\",\n11,\"Oti\",773, 500, 273, \"Q1\",\n12,\"Northern\", 112, 12, 100,\"Q1\",\n13,\"Savannah\", 1289,503, 786, \"Q1\",\n14,\"North East\",378, 142, 236,\"Q1\",\n15,\"Upper East\",1279,326, 953, \"Q1\",\n16, \"Upper West\", 3782, 3456, 326, \"Q1\",\n1,\"Western\", 602, 302, 300, \"Q2\",\n2, \"Central\", 1000, 600, 400,\"Q2\",\n3, \"Greater Accra\", 7990, 4792, 3198, \"Q2\",\n4, \"Volta\", 346, 93, 253, \"Q2\",\n5, \"Eastern\", 887, 387, 500,\"Q2\",\n6, \"Ashanti\",6000, 2000, 4000,\"Q2\",\n7, \"Western North\", 445, 195, 250,\"Q2\",\n8,  \"Ahafo\", 701, 339, 362,\"Q2\",\n9, \"Bono\",1444, 722, 722, \"Q2\",\n10,\"Bono East\", 1368,1048, 290,\"Q2\",\n11,\"Oti\",912, 534, 378, \"Q2\",\n12,\"Northern\", 122, 17, 105,\"Q2\",\n13,\"Savannah\", 1289,503, 786, \"Q2\",\n14,\"North East\",534, 182, 352,\"Q2\",\n15,\"Upper East\",1510,400, 1110, \"Q2\",\n16, \"Upper West\", 3991, 3496, 495, \"Q2\")\n\n\nn_chopbars_df_region_quarters %>% \n    kable() %>%\n    kable_styling() %>% \n  scroll_box(height = \"400px\")\n\n\n\n\n \n  \n    region_number \n    region \n    national \n    urban \n    rural \n    quarter \n  \n \n\n  \n    1 \n    Western \n    567 \n    300 \n    267 \n    Q1 \n  \n  \n    2 \n    Central \n    907 \n    600 \n    307 \n    Q1 \n  \n  \n    3 \n    Greater Accra \n    6990 \n    4792 \n    2198 \n    Q1 \n  \n  \n    4 \n    Volta \n    278 \n    78 \n    200 \n    Q1 \n  \n  \n    5 \n    Eastern \n    787 \n    287 \n    500 \n    Q1 \n  \n  \n    6 \n    Ashanti \n    5621 \n    621 \n    5000 \n    Q1 \n  \n  \n    7 \n    Western North \n    345 \n    145 \n    200 \n    Q1 \n  \n  \n    8 \n    Ahafo \n    678 \n    339 \n    339 \n    Q1 \n  \n  \n    9 \n    Bono \n    1268 \n    600 \n    668 \n    Q1 \n  \n  \n    10 \n    Bono East \n    1268 \n    1048 \n    220 \n    Q1 \n  \n  \n    11 \n    Oti \n    773 \n    500 \n    273 \n    Q1 \n  \n  \n    12 \n    Northern \n    112 \n    12 \n    100 \n    Q1 \n  \n  \n    13 \n    Savannah \n    1289 \n    503 \n    786 \n    Q1 \n  \n  \n    14 \n    North East \n    378 \n    142 \n    236 \n    Q1 \n  \n  \n    15 \n    Upper East \n    1279 \n    326 \n    953 \n    Q1 \n  \n  \n    16 \n    Upper West \n    3782 \n    3456 \n    326 \n    Q1 \n  \n  \n    1 \n    Western \n    602 \n    302 \n    300 \n    Q2 \n  \n  \n    2 \n    Central \n    1000 \n    600 \n    400 \n    Q2 \n  \n  \n    3 \n    Greater Accra \n    7990 \n    4792 \n    3198 \n    Q2 \n  \n  \n    4 \n    Volta \n    346 \n    93 \n    253 \n    Q2 \n  \n  \n    5 \n    Eastern \n    887 \n    387 \n    500 \n    Q2 \n  \n  \n    6 \n    Ashanti \n    6000 \n    2000 \n    4000 \n    Q2 \n  \n  \n    7 \n    Western North \n    445 \n    195 \n    250 \n    Q2 \n  \n  \n    8 \n    Ahafo \n    701 \n    339 \n    362 \n    Q2 \n  \n  \n    9 \n    Bono \n    1444 \n    722 \n    722 \n    Q2 \n  \n  \n    10 \n    Bono East \n    1368 \n    1048 \n    290 \n    Q2 \n  \n  \n    11 \n    Oti \n    912 \n    534 \n    378 \n    Q2 \n  \n  \n    12 \n    Northern \n    122 \n    17 \n    105 \n    Q2 \n  \n  \n    13 \n    Savannah \n    1289 \n    503 \n    786 \n    Q2 \n  \n  \n    14 \n    North East \n    534 \n    182 \n    352 \n    Q2 \n  \n  \n    15 \n    Upper East \n    1510 \n    400 \n    1110 \n    Q2 \n  \n  \n    16 \n    Upper West \n    3991 \n    3496 \n    495 \n    Q2 \n  \n\n\n\n\n\n\n\nShow the code\nn_chopbars_df_region_quarters_longformat <- n_chopbars_df_region_quarters %>% \n    pivot_longer(-c(region_number, region, quarter),\n                             names_to = \"locality\",\n                             values_to = \"number_of_chop_bars\"\n                             )\n\n\np_national <- n_chopbars_df_region_quarters_longformat %>% \n    filter(locality == \"national\") %>% \n    ggplot(mapping = aes(x     = reorder(region,desc(region_number)),\n                                             y     = number_of_chop_bars)) +\n    geom_col(width = 0.8,\n                     aes( alpha = reorder(quarter, desc(quarter))),\n                     position =  position_dodge(width = 0.8),\n                     fill = national_color)+\n    geom_text(mapping = aes(label = scales::comma(number_of_chop_bars),\n                                                    group = reorder(quarter, desc(quarter))),\n                        hjust = 1,\n                        position = position_dodge(width = 0.8)\n    ) +\n    gssthemes() +\n    scale_y_continuous( limits = c(0, 10000),\n                                            labels = scales::comma) +\n    scale_alpha_manual(values = seq(\n        from = 0.5,\n        to = 1,\n        length.out = 2\n    ),\n    guide = guide_legend(reverse = TRUE))+\n    labs(x = NULL,\n             alpha = NULL,\n             y = \"number of chop bars\",\n             title = \"National\")+\n    coord_flip(clip = \"off\") +\n    theme(panel.grid.major.x = element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y = element_blank(),\n                legend.position = \"top\",\n                axis.text.x = element_text(vjust = 0.5),\n                plot.title=element_text(hjust=0.5),\n        plot.subtitle=element_text(hjust=0.5))\n\n\n\np_urban <- n_chopbars_df_region_quarters_longformat %>% \n    filter(locality == \"urban\") %>% \n    ggplot(mapping = aes(x     = reorder(region,desc(region_number)),\n                                             y     = number_of_chop_bars,\n                                             group = reorder(quarter, desc(quarter)))) +\n    geom_col(width = 0.8,\n                     aes( alpha = reorder(quarter, desc(quarter))),\n                     position = \"dodge\",\n                     fill = urban_color) +\n    geom_text(mapping = aes(label = scales::comma(number_of_chop_bars)), hjust = 1, \n                        position = position_dodge(width = 0.8)) +\n    gssthemes() +\n    scale_y_continuous( limits = c(0, 8000),\n                                            labels = scales::comma) +\n    scale_alpha_manual(values = seq(\n        from = 0.5,\n        to = 1,\n        length.out = 2\n    ),\n    guide = guide_legend(reverse = TRUE))+\n    labs(x = NULL,\n             alpha = NULL,\n             y = \"number of chop bars\",\n             title = \"Urban\")+\n    coord_flip(clip = \"off\") +\n  # move the title text and subtitle text to the middle\n  theme(plot.title=element_text(hjust=0.5),\n        plot.subtitle=element_text(hjust=0.5),\n            panel.grid.major.x = element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y = element_blank(),\n                axis.ticks.y= element_blank(),              \n                legend.position = \"top\",\n                axis.text.y = element_blank())\n\np_rural <- n_chopbars_df_region_quarters_longformat %>% \n    filter(locality == \"rural\") %>% \n    ggplot(mapping = aes(x     = reorder(region,desc(region_number)),\n                                             y     = number_of_chop_bars,\n                                             group = reorder(quarter, desc(quarter)))) +\n    geom_col(width = 0.8,\n                     aes( alpha = reorder(quarter, desc(quarter))),\n                     position = \"dodge\",\n                     fill = rural_color) +\n    geom_text(mapping = aes(label = scales::comma(number_of_chop_bars)), hjust = 1, \n                        position = position_dodge(width = 0.8)) +\n    gssthemes() +\n    scale_y_continuous( limits = c(0, 8000),\n                                            labels = scales::comma) +\n    scale_alpha_manual(values = seq(\n        from = 0.5,\n        to = 1,\n        length.out = 2\n    ),\n    guide = guide_legend(reverse = TRUE))+\n    labs(x = NULL,\n             alpha = NULL,\n             y = \"number of chop bars\",\n             title = \"Rural\")+\n    coord_flip(clip = \"off\") +\n  # move the title text and subtitle text to the middle\n  theme(plot.title=element_text(hjust=0.5),\n        plot.subtitle=element_text(hjust=0.5),\n            panel.grid.major.x = element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y = element_blank(),\n                axis.ticks.y= element_blank(),              \n                legend.position = \"top\",\n                axis.text.y = element_blank())\n\n\np_national + p_urban + p_rural\n\n\n\n\n\n\n\n\nbar chart with a singe category hightlighted on top\nwith a bit of effor, a variable can also be shown on its own. In this case you can use facet_grid()\n\n\nShow the code\nn_chopbars_df_with_national   %>% \n    mutate(highlight = region == \"Ghana\") %>% \n    # Create a ggplot object and set the aesthetic mappings\n    # use the reorder function to reorder the the bars\n    ggplot(mapping = aes(x = reorder(region,number_of_chop_bars), \n                                             y = number_of_chop_bars,\n                                             fill = highlight)) +\n    geom_col(width = 0.8) +\n    geom_text(mapping = aes(label = scales::comma(number_of_chop_bars)), hjust = 0) +\n    gssthemes() +\n    scale_y_continuous( expand = c( 0, 0 ),\n                                            limits = nicelimits,\n                                            labels = scales::comma,\n                                            breaks = scales::extended_breaks(only.loose = TRUE)) +\n    scale_x_discrete(labels= function(x) highlight(x, \"Ghana\", \"black\")) +\n    scale_fill_manual(values = c(`FALSE` = national_color, \n                                                             `TRUE` = scales::muted(national_color)),\n                                        guide = \"none\") +\n    labs(x = NULL,\n             y = \"number of chop bars\" )+\n    coord_flip(clip = \"off\") +\n    theme(panel.grid.major.x = element_line(color = \"gray\", size=0.25),\n                panel.grid.major.y = element_blank(),\n                axis.text.x = element_text(vjust = 0.5),\n                strip.text = element_blank(),\n                axis.text.y = element_markdown()) +\n    facet_grid(fct_rev(as.factor(highlight))~.,scales = \"free\",\n                         space = \"free_y\")# to make this work you need to make the y axis a markdown format"
  },
  {
    "objectID": "graphics-guide.html#lollipop-chart",
    "href": "graphics-guide.html#lollipop-chart",
    "title": "R visualization",
    "section": "lollipop chart",
    "text": "lollipop chart\nA lollipop chart is used visually represent time series data where magnitude of occurrence is to be communicated. It shows the relationship between a numeric and a categorical variable, as well as identifying trends or patterns over time. They can be used to display numerical data such as quantities and magnitude."
  },
  {
    "objectID": "graphics-guide.html#line-chart",
    "href": "graphics-guide.html#line-chart",
    "title": "R visualization",
    "section": "line chart",
    "text": "line chart"
  },
  {
    "objectID": "graphics-guide.html#area-chart",
    "href": "graphics-guide.html#area-chart",
    "title": "R visualization",
    "section": "area chart",
    "text": "area chart"
  },
  {
    "objectID": "graphics-guide.html#dumbell-chart",
    "href": "graphics-guide.html#dumbell-chart",
    "title": "R visualization",
    "section": "Dumbell chart",
    "text": "Dumbell chart"
  },
  {
    "objectID": "graphics-guide.html#bumb-chart",
    "href": "graphics-guide.html#bumb-chart",
    "title": "R visualization",
    "section": "Bumb chart",
    "text": "Bumb chart\n\n\nShow the code\nsessionInfo()\n\n\nR version 4.2.2 (2022-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 22621)\n\nMatrix products: default\n\nlocale:\n[1] LC_COLLATE=English_United Kingdom.utf8 \n[2] LC_CTYPE=English_United Kingdom.utf8   \n[3] LC_MONETARY=English_United Kingdom.utf8\n[4] LC_NUMERIC=C                           \n[5] LC_TIME=English_United Kingdom.utf8    \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] patchwork_1.1.2   kableExtra_1.3.4  scales_1.2.1      showtext_0.9-5   \n [5] showtextdb_3.0    sysfonts_0.8.8    gghighlight_0.4.0 ggtext_0.1.2     \n [9] glue_1.6.2        forcats_1.0.0     stringr_1.5.0     dplyr_1.0.10     \n[13] purrr_1.0.1       readr_2.1.3       tidyr_1.3.0       tibble_3.1.8     \n[17] ggplot2_3.4.0     tidyverse_1.3.2   knitr_1.42       \n\nloaded via a namespace (and not attached):\n [1] httr_1.4.4          jsonlite_1.8.4      viridisLite_0.4.1  \n [4] modelr_0.1.10       assertthat_0.2.1    highr_0.10         \n [7] googlesheets4_1.0.1 cellranger_1.1.0    yaml_2.3.7         \n[10] pillar_1.8.1        backports_1.4.1     digest_0.6.31      \n[13] gridtext_0.1.5      rvest_1.0.3         colorspace_2.1-0   \n[16] htmltools_0.5.4     pkgconfig_2.0.3     broom_1.0.3        \n[19] haven_2.5.1         webshot_0.5.4       svglite_2.1.1      \n[22] tzdb_0.3.0          timechange_0.2.0    googledrive_2.0.0  \n[25] generics_0.1.3      farver_2.1.1        ellipsis_0.3.2     \n[28] withr_2.5.0         cli_3.6.0           magrittr_2.0.3     \n[31] crayon_1.5.2        readxl_1.4.1        evaluate_0.20      \n[34] fs_1.6.0            fansi_1.0.4         xml2_1.3.3         \n[37] tools_4.2.2         hms_1.1.2           gargle_1.3.0       \n[40] lifecycle_1.0.3     munsell_0.5.0       reprex_2.0.2       \n[43] compiler_4.2.2      systemfonts_1.0.4   rlang_1.0.6        \n[46] grid_4.2.2          rstudioapi_0.14     htmlwidgets_1.6.1  \n[49] labeling_0.4.2      rmarkdown_2.20      gtable_0.3.1       \n[52] DBI_1.1.3           markdown_1.5        R6_2.5.1           \n[55] lubridate_1.9.1     fastmap_1.1.0       utf8_1.2.2         \n[58] commonmark_1.8.1    stringi_1.7.12      Rcpp_1.0.10        \n[61] vctrs_0.5.2         dbplyr_2.3.0        tidyselect_1.2.0   \n[64] xfun_0.36"
  }
]